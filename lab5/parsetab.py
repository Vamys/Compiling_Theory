
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "right:nonassocIFXnonassocELSEleft<>NEGELEEQleftDOTADDDOTSUBleft+-leftDOTMULDOTDIVleft*/nonassoc!rightID[rightUMINUSleft'ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE ID IF INTNUM LE MULASSIGN NE ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction\n                    | instructioninstruction : expression ';'\n                   | assignment ';'\n                   | break_statement ';'\n                   | continue_statement ';'\n                   | return_statement ';'\n                   | print_statement ';'\n                   | for_statement\n                   | compound_statement\n                   | if_statement \n                   | while_statementcompound_statement : '{' instructions_opt '}'expression : expression '+' expression\n                  | expression '*' expression \n                  | expression '-' expression\n                  | expression '/' expression\n                  | expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expression\n                  | expression LE expression\n                  | expression GE expression\n                  | expression NE expression\n                  | expression EQ expression\n                  | expression '<' expression\n                  | expression '>' expression\n                  | '(' expression ')'\n                  | '[' expression_list ']'\n                  | ZEROS '(' expression_list ')'\n                  | ONES '(' expression_list ')'\n                  | EYE '(' expression_list ')'\n                  | '!' expression\n                  | '-' expression %prec UMINUS\n                  | ID\n                  | ID '[' expression_list ']'\n                  | expression ':' expression \n                  | string\n                  | INTNUM\n                  | FLOATNUM\n                  | expression '\\'' \n                  string : STRING\n              assignment : lvalue '=' expression\n                  | lvalue ADDASSIGN expression\n                  | lvalue SUBASSIGN expression\n                  | lvalue MULASSIGN expression\n                  | lvalue DIVASSIGN expressionlvalue : ID\n              | ID '[' expression_list ']' \n              expression_list : expression\n                       | expression_list ',' expression\n                        if_statement : IF '(' expression ')' instruction %prec IFX\n                   | IF '(' expression ')' instruction ELSE instructionwhile_statement : WHILE '(' expression ')' instructionfor_statement : FOR ID '=' expression instructionbreak_statement : BREAKcontinue_statement : CONTINUEreturn_statement : RETURN expression\n                       | RETURNprint_statement : PRINT expression_list\n                      "
    
_lr_action_items = {'$end':([0,1,2,3,4,11,12,13,14,36,37,54,55,56,57,58,109,122,124,125,128,],[-3,0,-1,-2,-5,-12,-13,-14,-15,-4,-6,-7,-8,-9,-10,-11,-16,-58,-55,-57,-56,]),'(':([0,3,4,11,12,13,14,15,16,17,18,19,20,21,23,24,25,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,114,115,116,118,119,120,121,122,123,124,125,126,127,128,],[16,16,-5,-12,-13,-14,-15,16,16,16,64,65,66,16,-41,-42,-43,16,16,16,78,79,-45,-4,-6,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-44,-7,-8,-9,-10,-11,-37,-38,16,16,16,-36,16,16,16,16,16,16,16,16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,16,-31,-32,16,16,-16,-33,-34,-35,16,16,16,-39,-58,16,-55,-57,-19,16,-56,]),'[':([0,3,4,11,12,13,14,15,16,17,21,22,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,114,115,116,118,119,120,121,122,123,124,125,126,127,128,],[17,17,-5,-12,-13,-14,-15,17,17,17,17,68,-41,-42,-43,17,17,17,-45,-4,-6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-44,-7,-8,-9,-10,-11,-37,95,17,17,17,-36,17,17,17,17,17,17,17,17,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,17,-31,-32,17,17,-16,-33,-34,-35,17,17,17,-39,-58,17,-55,-57,-19,17,-56,]),'ZEROS':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,114,115,116,118,119,120,121,122,123,124,125,126,127,128,],[18,18,-5,-12,-13,-14,-15,18,18,18,18,-41,-42,-43,18,18,18,-45,-4,-6,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-44,-7,-8,-9,-10,-11,-37,-38,18,18,18,-36,18,18,18,18,18,18,18,18,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,18,-31,-32,18,18,-16,-33,-34,-35,18,18,18,-39,-58,18,-55,-57,-19,18,-56,]),'ONES':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,114,115,116,118,119,120,121,122,123,124,125,126,127,128,],[19,19,-5,-12,-13,-14,-15,19,19,19,19,-41,-42,-43,19,19,19,-45,-4,-6,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-44,-7,-8,-9,-10,-11,-37,-38,19,19,19,-36,19,19,19,19,19,19,19,19,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,19,-31,-32,19,19,-16,-33,-34,-35,19,19,19,-39,-58,19,-55,-57,-19,19,-56,]),'EYE':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,114,115,116,118,119,120,121,122,123,124,125,126,127,128,],[20,20,-5,-12,-13,-14,-15,20,20,20,20,-41,-42,-43,20,20,20,-45,-4,-6,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-44,-7,-8,-9,-10,-11,-37,-38,20,20,20,-36,20,20,20,20,20,20,20,20,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,20,-31,-32,20,20,-16,-33,-34,-35,20,20,20,-39,-58,20,-55,-57,-19,20,-56,]),'!':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,114,115,116,118,119,120,121,122,123,124,125,126,127,128,],[21,21,-5,-12,-13,-14,-15,21,21,21,21,-41,-42,-43,21,21,21,-45,-4,-6,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-44,-7,-8,-9,-10,-11,-37,-38,21,21,21,-36,21,21,21,21,21,21,21,21,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,21,-31,-32,21,21,-16,-33,-34,-35,21,21,21,-39,-58,21,-55,-57,-19,21,-56,]),'-':([0,3,4,5,11,12,13,14,15,16,17,21,22,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,],[15,15,-5,40,-12,-13,-14,-15,15,15,15,15,-38,-41,-42,-43,15,15,15,-45,-4,-6,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-44,-7,-8,-9,-10,-11,-37,-38,40,40,15,15,15,-36,15,15,15,15,15,15,40,15,15,-17,-18,-19,-20,40,40,-23,-24,40,40,40,40,40,40,40,15,-31,-32,15,40,40,40,40,40,15,-16,40,40,40,-33,-34,-35,-39,123,15,15,-39,-58,15,-55,-57,-19,15,-56,]),'ID':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,114,115,116,118,119,120,121,122,123,124,125,126,127,128,],[22,22,-5,-12,-13,-14,-15,60,60,60,60,-41,-42,-43,60,60,76,22,-45,-4,-6,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-44,-7,-8,-9,-10,-11,-37,-38,60,60,60,-36,60,60,60,60,60,60,60,60,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,60,-31,-32,60,60,-16,-33,-34,-35,22,22,22,-39,-58,60,-55,-57,-19,22,-56,]),'INTNUM':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,114,115,116,118,119,120,121,122,123,124,125,126,127,128,],[24,24,-5,-12,-13,-14,-15,24,24,24,24,-41,-42,-43,24,24,24,-45,-4,-6,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-44,-7,-8,-9,-10,-11,-37,-38,24,24,24,-36,24,24,24,24,24,24,24,24,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,24,-31,-32,24,24,-16,-33,-34,-35,24,24,24,-39,-58,24,-55,-57,-19,24,-56,]),'FLOATNUM':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,114,115,116,118,119,120,121,122,123,124,125,126,127,128,],[25,25,-5,-12,-13,-14,-15,25,25,25,25,-41,-42,-43,25,25,25,-45,-4,-6,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-44,-7,-8,-9,-10,-11,-37,-38,25,25,25,-36,25,25,25,25,25,25,25,25,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,25,-31,-32,25,25,-16,-33,-34,-35,25,25,25,-39,-58,25,-55,-57,-19,25,-56,]),'BREAK':([0,3,4,11,12,13,14,23,24,25,32,35,36,37,53,54,55,56,57,58,59,60,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,109,114,115,116,118,119,120,121,122,124,125,126,127,128,],[27,27,-5,-12,-13,-14,-15,-41,-42,-43,27,-45,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,27,27,27,-39,-58,-55,-57,-19,27,-56,]),'CONTINUE':([0,3,4,11,12,13,14,23,24,25,32,35,36,37,53,54,55,56,57,58,59,60,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,109,114,115,116,118,119,120,121,122,124,125,126,127,128,],[28,28,-5,-12,-13,-14,-15,-41,-42,-43,28,-45,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,28,28,28,-39,-58,-55,-57,-19,28,-56,]),'RETURN':([0,3,4,11,12,13,14,23,24,25,32,35,36,37,53,54,55,56,57,58,59,60,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,109,114,115,116,118,119,120,121,122,124,125,126,127,128,],[29,29,-5,-12,-13,-14,-15,-41,-42,-43,29,-45,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,29,29,29,-39,-58,-55,-57,-19,29,-56,]),'PRINT':([0,3,4,11,12,13,14,23,24,25,32,35,36,37,53,54,55,56,57,58,59,60,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,109,114,115,116,118,119,120,121,122,124,125,126,127,128,],[30,30,-5,-12,-13,-14,-15,-41,-42,-43,30,-45,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,30,30,30,-39,-58,-55,-57,-19,30,-56,]),'FOR':([0,3,4,11,12,13,14,23,24,25,32,35,36,37,53,54,55,56,57,58,59,60,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,109,114,115,116,118,119,120,121,122,124,125,126,127,128,],[31,31,-5,-12,-13,-14,-15,-41,-42,-43,31,-45,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,31,31,31,-39,-58,-55,-57,-19,31,-56,]),'{':([0,3,4,11,12,13,14,23,24,25,32,35,36,37,53,54,55,56,57,58,59,60,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,109,114,115,116,118,119,120,121,122,124,125,126,127,128,],[32,32,-5,-12,-13,-14,-15,-41,-42,-43,32,-45,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,32,32,32,-39,-58,-55,-57,-19,32,-56,]),'IF':([0,3,4,11,12,13,14,23,24,25,32,35,36,37,53,54,55,56,57,58,59,60,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,109,114,115,116,118,119,120,121,122,124,125,126,127,128,],[33,33,-5,-12,-13,-14,-15,-41,-42,-43,33,-45,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,33,33,33,-39,-58,-55,-57,-19,33,-56,]),'WHILE':([0,3,4,11,12,13,14,23,24,25,32,35,36,37,53,54,55,56,57,58,59,60,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,109,114,115,116,118,119,120,121,122,124,125,126,127,128,],[34,34,-5,-12,-13,-14,-15,-41,-42,-43,34,-45,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,34,34,34,-39,-58,-55,-57,-19,34,-56,]),'STRING':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,114,115,116,118,119,120,121,122,123,124,125,126,127,128,],[35,35,-5,-12,-13,-14,-15,35,35,35,35,-41,-42,-43,35,35,35,-45,-4,-6,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-44,-7,-8,-9,-10,-11,-37,-38,35,35,35,-36,35,35,35,35,35,35,35,35,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,35,-31,-32,35,35,-16,-33,-34,-35,35,35,35,-39,-58,35,-55,-57,-19,35,-56,]),'}':([3,4,11,12,13,14,32,36,37,54,55,56,57,58,77,109,122,124,125,128,],[-2,-5,-12,-13,-14,-15,-3,-4,-6,-7,-8,-9,-10,-11,109,-16,-58,-55,-57,-56,]),';':([5,6,7,8,9,10,22,23,24,25,27,28,29,35,53,59,60,63,67,74,75,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,113,114,115,116,117,121,126,],[37,54,55,56,57,58,-38,-41,-42,-43,-59,-60,-62,-45,-44,-37,-38,-53,-36,-61,-63,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-46,-47,-48,-49,-50,-54,-33,-34,-35,-39,-39,-37,]),'+':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[38,-38,-41,-42,-43,-45,-44,-37,-38,38,38,-36,38,-17,-18,-19,-20,38,38,-23,-24,38,38,38,38,38,38,38,-31,-32,38,38,38,38,38,38,38,38,-33,-34,-35,-39,38,-39,-19,]),'*':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[39,-38,-41,-42,-43,-45,-44,-37,-38,39,39,-36,39,39,-18,39,-20,39,39,39,39,39,39,39,39,39,39,39,-31,-32,39,39,39,39,39,39,39,39,-33,-34,-35,-39,39,-39,39,]),'/':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[41,-38,-41,-42,-43,-45,-44,-37,-38,41,41,-36,41,41,-18,41,-20,41,41,41,41,41,41,41,41,41,41,41,-31,-32,41,41,41,41,41,41,41,41,-33,-34,-35,-39,41,-39,41,]),'DOTADD':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[42,-38,-41,-42,-43,-45,-44,-37,-38,42,42,-36,42,-17,-18,-19,-20,-21,-22,-23,-24,42,42,42,42,42,42,42,-31,-32,42,42,42,42,42,42,42,42,-33,-34,-35,-39,42,-39,-19,]),'DOTSUB':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[43,-38,-41,-42,-43,-45,-44,-37,-38,43,43,-36,43,-17,-18,-19,-20,-21,-22,-23,-24,43,43,43,43,43,43,43,-31,-32,43,43,43,43,43,43,43,43,-33,-34,-35,-39,43,-39,-19,]),'DOTMUL':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[44,-38,-41,-42,-43,-45,-44,-37,-38,44,44,-36,44,44,-18,44,-20,44,44,-23,-24,44,44,44,44,44,44,44,-31,-32,44,44,44,44,44,44,44,44,-33,-34,-35,-39,44,-39,44,]),'DOTDIV':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[45,-38,-41,-42,-43,-45,-44,-37,-38,45,45,-36,45,45,-18,45,-20,45,45,-23,-24,45,45,45,45,45,45,45,-31,-32,45,45,45,45,45,45,45,45,-33,-34,-35,-39,45,-39,45,]),'LE':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[46,-38,-41,-42,-43,-45,-44,-37,-38,46,46,-36,46,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,46,-31,-32,46,46,46,46,46,46,46,46,-33,-34,-35,-39,46,-39,-19,]),'GE':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[47,-38,-41,-42,-43,-45,-44,-37,-38,47,47,-36,47,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,47,-31,-32,47,47,47,47,47,47,47,47,-33,-34,-35,-39,47,-39,-19,]),'NE':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[48,-38,-41,-42,-43,-45,-44,-37,-38,48,48,-36,48,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,48,-31,-32,48,48,48,48,48,48,48,48,-33,-34,-35,-39,48,-39,-19,]),'EQ':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[49,-38,-41,-42,-43,-45,-44,-37,-38,49,49,-36,49,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,49,-31,-32,49,49,49,49,49,49,49,49,-33,-34,-35,-39,49,-39,-19,]),'<':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[50,-38,-41,-42,-43,-45,-44,-37,-38,50,50,-36,50,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,50,-31,-32,50,50,50,50,50,50,50,50,-33,-34,-35,-39,50,-39,-19,]),'>':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[51,-38,-41,-42,-43,-45,-44,-37,-38,51,51,-36,51,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,51,-31,-32,51,51,51,51,51,51,51,51,-33,-34,-35,-39,51,-39,-19,]),':':([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[52,-38,-41,-42,-43,-45,-44,-37,-38,52,52,-36,52,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,52,-31,-32,52,52,52,52,52,52,52,52,-33,-34,-35,-39,52,-39,-19,]),"'":([5,22,23,24,25,35,53,59,60,61,63,67,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,103,104,105,106,107,110,111,113,114,115,116,117,118,121,126,],[53,-38,-41,-42,-43,-45,-44,53,-38,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-31,-32,53,53,53,53,53,53,53,53,-33,-34,-35,-39,53,-39,53,]),'ELSE':([11,12,13,14,37,54,55,56,57,58,109,122,124,125,128,],[-12,-13,-14,-15,-6,-7,-8,-9,-10,-11,-16,-58,127,-57,-56,]),'=':([22,26,76,117,],[-51,69,108,-52,]),'ADDASSIGN':([22,26,117,],[-51,70,-52,]),'SUBASSIGN':([22,26,117,],[-51,71,-52,]),'MULASSIGN':([22,26,117,],[-51,72,-52,]),'DIVASSIGN':([22,26,117,],[-51,73,-52,]),')':([23,24,25,35,53,59,60,61,63,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,101,110,111,113,114,115,116,121,],[-41,-42,-43,-45,-44,-37,-38,96,-53,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,114,115,116,119,120,-54,-33,-34,-35,-39,]),']':([23,24,25,35,53,59,60,62,63,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,102,112,113,114,115,116,121,],[-41,-42,-43,-45,-44,-37,-38,97,-53,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,117,121,-54,-33,-34,-35,-39,]),',':([23,24,25,35,53,59,60,62,63,67,75,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,101,102,112,113,114,115,116,121,],[-41,-42,-43,-45,-44,-37,-38,98,-53,-36,98,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,98,98,98,98,98,-54,-33,-34,-35,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,32,],[2,77,]),'instructions':([0,32,],[3,3,]),'instruction':([0,3,32,118,119,120,127,],[4,36,4,122,124,125,128,]),'expression':([0,3,15,16,17,21,29,30,32,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,64,65,66,68,69,70,71,72,73,78,79,95,98,108,118,119,120,123,127,],[5,5,59,61,63,67,74,63,5,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,63,63,63,63,103,104,105,106,107,110,111,63,113,118,5,5,5,126,5,]),'assignment':([0,3,32,118,119,120,127,],[6,6,6,6,6,6,6,]),'break_statement':([0,3,32,118,119,120,127,],[7,7,7,7,7,7,7,]),'continue_statement':([0,3,32,118,119,120,127,],[8,8,8,8,8,8,8,]),'return_statement':([0,3,32,118,119,120,127,],[9,9,9,9,9,9,9,]),'print_statement':([0,3,32,118,119,120,127,],[10,10,10,10,10,10,10,]),'for_statement':([0,3,32,118,119,120,127,],[11,11,11,11,11,11,11,]),'compound_statement':([0,3,32,118,119,120,127,],[12,12,12,12,12,12,12,]),'if_statement':([0,3,32,118,119,120,127,],[13,13,13,13,13,13,13,]),'while_statement':([0,3,32,118,119,120,127,],[14,14,14,14,14,14,14,]),'string':([0,3,15,16,17,21,29,30,32,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,64,65,66,68,69,70,71,72,73,78,79,95,98,108,118,119,120,123,127,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'lvalue':([0,3,32,118,119,120,127,],[26,26,26,26,26,26,26,]),'expression_list':([17,30,64,65,66,68,95,],[62,75,99,100,101,102,112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',33),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',37),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',41),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',46),
  ('instructions -> instruction','instructions',1,'p_instructions_1','Mparser.py',47),
  ('instruction -> expression ;','instruction',2,'p_instruction','Mparser.py',55),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',56),
  ('instruction -> break_statement ;','instruction',2,'p_instruction','Mparser.py',57),
  ('instruction -> continue_statement ;','instruction',2,'p_instruction','Mparser.py',58),
  ('instruction -> return_statement ;','instruction',2,'p_instruction','Mparser.py',59),
  ('instruction -> print_statement ;','instruction',2,'p_instruction','Mparser.py',60),
  ('instruction -> for_statement','instruction',1,'p_instruction','Mparser.py',61),
  ('instruction -> compound_statement','instruction',1,'p_instruction','Mparser.py',62),
  ('instruction -> if_statement','instruction',1,'p_instruction','Mparser.py',63),
  ('instruction -> while_statement','instruction',1,'p_instruction','Mparser.py',64),
  ('compound_statement -> { instructions_opt }','compound_statement',3,'p_compound_statement','Mparser.py',68),
  ('expression -> expression + expression','expression',3,'p_expression','Mparser.py',72),
  ('expression -> expression * expression','expression',3,'p_expression','Mparser.py',73),
  ('expression -> expression - expression','expression',3,'p_expression','Mparser.py',74),
  ('expression -> expression / expression','expression',3,'p_expression','Mparser.py',75),
  ('expression -> expression DOTADD expression','expression',3,'p_expression','Mparser.py',76),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression','Mparser.py',77),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression','Mparser.py',78),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression','Mparser.py',79),
  ('expression -> expression LE expression','expression',3,'p_expression','Mparser.py',80),
  ('expression -> expression GE expression','expression',3,'p_expression','Mparser.py',81),
  ('expression -> expression NE expression','expression',3,'p_expression','Mparser.py',82),
  ('expression -> expression EQ expression','expression',3,'p_expression','Mparser.py',83),
  ('expression -> expression < expression','expression',3,'p_expression','Mparser.py',84),
  ('expression -> expression > expression','expression',3,'p_expression','Mparser.py',85),
  ('expression -> ( expression )','expression',3,'p_expression','Mparser.py',86),
  ('expression -> [ expression_list ]','expression',3,'p_expression','Mparser.py',87),
  ('expression -> ZEROS ( expression_list )','expression',4,'p_expression','Mparser.py',88),
  ('expression -> ONES ( expression_list )','expression',4,'p_expression','Mparser.py',89),
  ('expression -> EYE ( expression_list )','expression',4,'p_expression','Mparser.py',90),
  ('expression -> ! expression','expression',2,'p_expression','Mparser.py',91),
  ('expression -> - expression','expression',2,'p_expression','Mparser.py',92),
  ('expression -> ID','expression',1,'p_expression','Mparser.py',93),
  ('expression -> ID [ expression_list ]','expression',4,'p_expression','Mparser.py',94),
  ('expression -> expression : expression','expression',3,'p_expression','Mparser.py',95),
  ('expression -> string','expression',1,'p_expression','Mparser.py',96),
  ('expression -> INTNUM','expression',1,'p_expression','Mparser.py',97),
  ('expression -> FLOATNUM','expression',1,'p_expression','Mparser.py',98),
  ("expression -> expression '",'expression',2,'p_expression','Mparser.py',99),
  ('string -> STRING','string',1,'p_string','Mparser.py',134),
  ('assignment -> lvalue = expression','assignment',3,'p_assigment','Mparser.py',145),
  ('assignment -> lvalue ADDASSIGN expression','assignment',3,'p_assigment','Mparser.py',146),
  ('assignment -> lvalue SUBASSIGN expression','assignment',3,'p_assigment','Mparser.py',147),
  ('assignment -> lvalue MULASSIGN expression','assignment',3,'p_assigment','Mparser.py',148),
  ('assignment -> lvalue DIVASSIGN expression','assignment',3,'p_assigment','Mparser.py',149),
  ('lvalue -> ID','lvalue',1,'p_lvalue','Mparser.py',153),
  ('lvalue -> ID [ expression_list ]','lvalue',4,'p_lvalue','Mparser.py',154),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Mparser.py',159),
  ('expression_list -> expression_list , expression','expression_list',3,'p_expression_list','Mparser.py',160),
  ('if_statement -> IF ( expression ) instruction','if_statement',5,'p_if_statement','Mparser.py',169),
  ('if_statement -> IF ( expression ) instruction ELSE instruction','if_statement',7,'p_if_statement','Mparser.py',170),
  ('while_statement -> WHILE ( expression ) instruction','while_statement',5,'p_while_statement','Mparser.py',178),
  ('for_statement -> FOR ID = expression instruction','for_statement',5,'p_for_statement','Mparser.py',183),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement','Mparser.py',187),
  ('continue_statement -> CONTINUE','continue_statement',1,'p_continue_statement','Mparser.py',191),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','Mparser.py',195),
  ('return_statement -> RETURN','return_statement',1,'p_return_statement','Mparser.py',196),
  ('print_statement -> PRINT expression_list','print_statement',2,'p_print_statement','Mparser.py',200),
]
