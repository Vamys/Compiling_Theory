Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> expression ;
Rule 7     instruction -> assignment ;
Rule 8     instruction -> break_statement ;
Rule 9     instruction -> continue_statement ;
Rule 10    instruction -> return_statement ;
Rule 11    instruction -> print_statement ;
Rule 12    instruction -> for_statement
Rule 13    instruction -> compound_statement
Rule 14    instruction -> if_statement
Rule 15    instruction -> while_statement
Rule 16    compound_statement -> { instructions_opt }
Rule 17    expression -> expression + expression
Rule 18    expression -> expression * expression
Rule 19    expression -> expression - expression
Rule 20    expression -> expression / expression
Rule 21    expression -> expression DOTADD expression
Rule 22    expression -> expression DOTSUB expression
Rule 23    expression -> expression DOTMUL expression
Rule 24    expression -> expression DOTDIV expression
Rule 25    expression -> expression LE expression
Rule 26    expression -> expression GE expression
Rule 27    expression -> expression NE expression
Rule 28    expression -> expression EQ expression
Rule 29    expression -> expression < expression
Rule 30    expression -> expression > expression
Rule 31    expression -> ( expression )
Rule 32    expression -> [ expression_list ]
Rule 33    expression -> ZEROS ( expression_list )
Rule 34    expression -> ONES ( expression_list )
Rule 35    expression -> EYE ( expression_list )
Rule 36    expression -> ! expression
Rule 37    expression -> - expression
Rule 38    expression -> ID
Rule 39    expression -> ID [ expression_list ]
Rule 40    expression -> expression : expression
Rule 41    expression -> INTNUM
Rule 42    expression -> FLOATNUM
Rule 43    expression -> STRING
Rule 44    expression -> expression '
Rule 45    assignment -> lvalue = expression
Rule 46    assignment -> lvalue ADDASSIGN expression
Rule 47    assignment -> lvalue SUBASSIGN expression
Rule 48    assignment -> lvalue MULASSIGN expression
Rule 49    assignment -> lvalue DIVASSIGN expression
Rule 50    lvalue -> ID
Rule 51    lvalue -> ID [ expression_list ]
Rule 52    expression_list -> expression
Rule 53    expression_list -> expression_list , expression
Rule 54    if_statement -> IF ( expression ) instruction
Rule 55    if_statement -> IF ( expression ) instruction ELSE instruction
Rule 56    while_statement -> WHILE ( expression ) instruction
Rule 57    for_statement -> FOR ID = expression instruction
Rule 58    break_statement -> BREAK
Rule 59    continue_statement -> CONTINUE
Rule 60    return_statement -> RETURN expression
Rule 61    return_statement -> RETURN
Rule 62    print_statement -> PRINT expression_list

Terminals, with rules where they appear

!                    : 36
'                    : 44
(                    : 31 33 34 35 54 55 56
)                    : 31 33 34 35 54 55 56
*                    : 18
+                    : 17
,                    : 53
-                    : 19 37
/                    : 20
:                    : 40
;                    : 6 7 8 9 10 11
<                    : 29
=                    : 45 57
>                    : 30
ADDASSIGN            : 46
BREAK                : 58
CONTINUE             : 59
DIVASSIGN            : 49
DOTADD               : 21
DOTDIV               : 24
DOTMUL               : 23
DOTSUB               : 22
ELSE                 : 55
EQ                   : 28
EYE                  : 35
FLOATNUM             : 42
FOR                  : 57
GE                   : 26
ID                   : 38 39 50 51 57
IF                   : 54 55
INTNUM               : 41
LE                   : 25
MULASSIGN            : 48
NE                   : 27
ONES                 : 34
PRINT                : 62
RETURN               : 60 61
STRING               : 43
SUBASSIGN            : 47
WHILE                : 56
ZEROS                : 33
[                    : 32 39 51
]                    : 32 39 51
error                : 
{                    : 16
}                    : 16

Nonterminals, with rules where they appear

assignment           : 7
break_statement      : 8
compound_statement   : 13
continue_statement   : 9
expression           : 6 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 36 37 40 40 44 45 46 47 48 49 52 53 54 55 56 57 60
expression_list      : 32 33 34 35 39 51 53 62
for_statement        : 12
if_statement         : 14
instruction          : 4 5 54 55 55 56 57
instructions         : 2 4
instructions_opt     : 1 16
lvalue               : 45 46 47 48 49
print_statement      : 11
program              : 0
return_statement     : 10
while_statement      : 15

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . expression ;
    (7) instruction -> . assignment ;
    (8) instruction -> . break_statement ;
    (9) instruction -> . continue_statement ;
    (10) instruction -> . return_statement ;
    (11) instruction -> . print_statement ;
    (12) instruction -> . for_statement
    (13) instruction -> . compound_statement
    (14) instruction -> . if_statement
    (15) instruction -> . while_statement
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '
    (45) assignment -> . lvalue = expression
    (46) assignment -> . lvalue ADDASSIGN expression
    (47) assignment -> . lvalue SUBASSIGN expression
    (48) assignment -> . lvalue MULASSIGN expression
    (49) assignment -> . lvalue DIVASSIGN expression
    (58) break_statement -> . BREAK
    (59) continue_statement -> . CONTINUE
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) print_statement -> . PRINT expression_list
    (57) for_statement -> . FOR ID = expression instruction
    (16) compound_statement -> . { instructions_opt }
    (54) if_statement -> . IF ( expression ) instruction
    (55) if_statement -> . IF ( expression ) instruction ELSE instruction
    (56) while_statement -> . WHILE ( expression ) instruction
    (50) lvalue -> . ID
    (51) lvalue -> . ID [ expression_list ]

    $end            reduce using rule 3 (instructions_opt -> .)
    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    {               shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    expression                     shift and go to state 5
    assignment                     shift and go to state 6
    break_statement                shift and go to state 7
    continue_statement             shift and go to state 8
    return_statement               shift and go to state 9
    print_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    compound_statement             shift and go to state 12
    if_statement                   shift and go to state 13
    while_statement                shift and go to state 14
    lvalue                         shift and go to state 26

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . expression ;
    (7) instruction -> . assignment ;
    (8) instruction -> . break_statement ;
    (9) instruction -> . continue_statement ;
    (10) instruction -> . return_statement ;
    (11) instruction -> . print_statement ;
    (12) instruction -> . for_statement
    (13) instruction -> . compound_statement
    (14) instruction -> . if_statement
    (15) instruction -> . while_statement
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '
    (45) assignment -> . lvalue = expression
    (46) assignment -> . lvalue ADDASSIGN expression
    (47) assignment -> . lvalue SUBASSIGN expression
    (48) assignment -> . lvalue MULASSIGN expression
    (49) assignment -> . lvalue DIVASSIGN expression
    (58) break_statement -> . BREAK
    (59) continue_statement -> . CONTINUE
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) print_statement -> . PRINT expression_list
    (57) for_statement -> . FOR ID = expression instruction
    (16) compound_statement -> . { instructions_opt }
    (54) if_statement -> . IF ( expression ) instruction
    (55) if_statement -> . IF ( expression ) instruction ELSE instruction
    (56) while_statement -> . WHILE ( expression ) instruction
    (50) lvalue -> . ID
    (51) lvalue -> . ID [ expression_list ]

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    }               reduce using rule 2 (instructions_opt -> instructions .)
    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    {               shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    instruction                    shift and go to state 35
    expression                     shift and go to state 5
    assignment                     shift and go to state 6
    break_statement                shift and go to state 7
    continue_statement             shift and go to state 8
    return_statement               shift and go to state 9
    print_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    compound_statement             shift and go to state 12
    if_statement                   shift and go to state 13
    while_statement                shift and go to state 14
    lvalue                         shift and go to state 26

state 4

    (5) instructions -> instruction .

    (               reduce using rule 5 (instructions -> instruction .)
    [               reduce using rule 5 (instructions -> instruction .)
    ZEROS           reduce using rule 5 (instructions -> instruction .)
    ONES            reduce using rule 5 (instructions -> instruction .)
    EYE             reduce using rule 5 (instructions -> instruction .)
    !               reduce using rule 5 (instructions -> instruction .)
    -               reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    INTNUM          reduce using rule 5 (instructions -> instruction .)
    FLOATNUM        reduce using rule 5 (instructions -> instruction .)
    STRING          reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    {               reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)


state 5

    (6) instruction -> expression . ;
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               shift and go to state 36
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52


state 6

    (7) instruction -> assignment . ;

    ;               shift and go to state 53


state 7

    (8) instruction -> break_statement . ;

    ;               shift and go to state 54


state 8

    (9) instruction -> continue_statement . ;

    ;               shift and go to state 55


state 9

    (10) instruction -> return_statement . ;

    ;               shift and go to state 56


state 10

    (11) instruction -> print_statement . ;

    ;               shift and go to state 57


state 11

    (12) instruction -> for_statement .

    (               reduce using rule 12 (instruction -> for_statement .)
    [               reduce using rule 12 (instruction -> for_statement .)
    ZEROS           reduce using rule 12 (instruction -> for_statement .)
    ONES            reduce using rule 12 (instruction -> for_statement .)
    EYE             reduce using rule 12 (instruction -> for_statement .)
    !               reduce using rule 12 (instruction -> for_statement .)
    -               reduce using rule 12 (instruction -> for_statement .)
    ID              reduce using rule 12 (instruction -> for_statement .)
    INTNUM          reduce using rule 12 (instruction -> for_statement .)
    FLOATNUM        reduce using rule 12 (instruction -> for_statement .)
    STRING          reduce using rule 12 (instruction -> for_statement .)
    BREAK           reduce using rule 12 (instruction -> for_statement .)
    CONTINUE        reduce using rule 12 (instruction -> for_statement .)
    RETURN          reduce using rule 12 (instruction -> for_statement .)
    PRINT           reduce using rule 12 (instruction -> for_statement .)
    FOR             reduce using rule 12 (instruction -> for_statement .)
    {               reduce using rule 12 (instruction -> for_statement .)
    IF              reduce using rule 12 (instruction -> for_statement .)
    WHILE           reduce using rule 12 (instruction -> for_statement .)
    $end            reduce using rule 12 (instruction -> for_statement .)
    }               reduce using rule 12 (instruction -> for_statement .)
    ELSE            reduce using rule 12 (instruction -> for_statement .)


state 12

    (13) instruction -> compound_statement .

    (               reduce using rule 13 (instruction -> compound_statement .)
    [               reduce using rule 13 (instruction -> compound_statement .)
    ZEROS           reduce using rule 13 (instruction -> compound_statement .)
    ONES            reduce using rule 13 (instruction -> compound_statement .)
    EYE             reduce using rule 13 (instruction -> compound_statement .)
    !               reduce using rule 13 (instruction -> compound_statement .)
    -               reduce using rule 13 (instruction -> compound_statement .)
    ID              reduce using rule 13 (instruction -> compound_statement .)
    INTNUM          reduce using rule 13 (instruction -> compound_statement .)
    FLOATNUM        reduce using rule 13 (instruction -> compound_statement .)
    STRING          reduce using rule 13 (instruction -> compound_statement .)
    BREAK           reduce using rule 13 (instruction -> compound_statement .)
    CONTINUE        reduce using rule 13 (instruction -> compound_statement .)
    RETURN          reduce using rule 13 (instruction -> compound_statement .)
    PRINT           reduce using rule 13 (instruction -> compound_statement .)
    FOR             reduce using rule 13 (instruction -> compound_statement .)
    {               reduce using rule 13 (instruction -> compound_statement .)
    IF              reduce using rule 13 (instruction -> compound_statement .)
    WHILE           reduce using rule 13 (instruction -> compound_statement .)
    $end            reduce using rule 13 (instruction -> compound_statement .)
    }               reduce using rule 13 (instruction -> compound_statement .)
    ELSE            reduce using rule 13 (instruction -> compound_statement .)


state 13

    (14) instruction -> if_statement .

    (               reduce using rule 14 (instruction -> if_statement .)
    [               reduce using rule 14 (instruction -> if_statement .)
    ZEROS           reduce using rule 14 (instruction -> if_statement .)
    ONES            reduce using rule 14 (instruction -> if_statement .)
    EYE             reduce using rule 14 (instruction -> if_statement .)
    !               reduce using rule 14 (instruction -> if_statement .)
    -               reduce using rule 14 (instruction -> if_statement .)
    ID              reduce using rule 14 (instruction -> if_statement .)
    INTNUM          reduce using rule 14 (instruction -> if_statement .)
    FLOATNUM        reduce using rule 14 (instruction -> if_statement .)
    STRING          reduce using rule 14 (instruction -> if_statement .)
    BREAK           reduce using rule 14 (instruction -> if_statement .)
    CONTINUE        reduce using rule 14 (instruction -> if_statement .)
    RETURN          reduce using rule 14 (instruction -> if_statement .)
    PRINT           reduce using rule 14 (instruction -> if_statement .)
    FOR             reduce using rule 14 (instruction -> if_statement .)
    {               reduce using rule 14 (instruction -> if_statement .)
    IF              reduce using rule 14 (instruction -> if_statement .)
    WHILE           reduce using rule 14 (instruction -> if_statement .)
    $end            reduce using rule 14 (instruction -> if_statement .)
    }               reduce using rule 14 (instruction -> if_statement .)
    ELSE            reduce using rule 14 (instruction -> if_statement .)


state 14

    (15) instruction -> while_statement .

    (               reduce using rule 15 (instruction -> while_statement .)
    [               reduce using rule 15 (instruction -> while_statement .)
    ZEROS           reduce using rule 15 (instruction -> while_statement .)
    ONES            reduce using rule 15 (instruction -> while_statement .)
    EYE             reduce using rule 15 (instruction -> while_statement .)
    !               reduce using rule 15 (instruction -> while_statement .)
    -               reduce using rule 15 (instruction -> while_statement .)
    ID              reduce using rule 15 (instruction -> while_statement .)
    INTNUM          reduce using rule 15 (instruction -> while_statement .)
    FLOATNUM        reduce using rule 15 (instruction -> while_statement .)
    STRING          reduce using rule 15 (instruction -> while_statement .)
    BREAK           reduce using rule 15 (instruction -> while_statement .)
    CONTINUE        reduce using rule 15 (instruction -> while_statement .)
    RETURN          reduce using rule 15 (instruction -> while_statement .)
    PRINT           reduce using rule 15 (instruction -> while_statement .)
    FOR             reduce using rule 15 (instruction -> while_statement .)
    {               reduce using rule 15 (instruction -> while_statement .)
    IF              reduce using rule 15 (instruction -> while_statement .)
    WHILE           reduce using rule 15 (instruction -> while_statement .)
    $end            reduce using rule 15 (instruction -> while_statement .)
    }               reduce using rule 15 (instruction -> while_statement .)
    ELSE            reduce using rule 15 (instruction -> while_statement .)


state 15

    (37) expression -> - . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 58

state 16

    (31) expression -> ( . expression )
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 60

state 17

    (32) expression -> [ . expression_list ]
    (52) expression_list -> . expression
    (53) expression_list -> . expression_list , expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression_list                shift and go to state 61
    expression                     shift and go to state 62

state 18

    (33) expression -> ZEROS . ( expression_list )

    (               shift and go to state 63


state 19

    (34) expression -> ONES . ( expression_list )

    (               shift and go to state 64


state 20

    (35) expression -> EYE . ( expression_list )

    (               shift and go to state 65


state 21

    (36) expression -> ! . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 66

state 22

    (38) expression -> ID .
    (39) expression -> ID . [ expression_list ]
    (50) lvalue -> ID .
    (51) lvalue -> ID . [ expression_list ]

    ;               reduce using rule 38 (expression -> ID .)
    +               reduce using rule 38 (expression -> ID .)
    *               reduce using rule 38 (expression -> ID .)
    -               reduce using rule 38 (expression -> ID .)
    /               reduce using rule 38 (expression -> ID .)
    DOTADD          reduce using rule 38 (expression -> ID .)
    DOTSUB          reduce using rule 38 (expression -> ID .)
    DOTMUL          reduce using rule 38 (expression -> ID .)
    DOTDIV          reduce using rule 38 (expression -> ID .)
    LE              reduce using rule 38 (expression -> ID .)
    GE              reduce using rule 38 (expression -> ID .)
    NE              reduce using rule 38 (expression -> ID .)
    EQ              reduce using rule 38 (expression -> ID .)
    <               reduce using rule 38 (expression -> ID .)
    >               reduce using rule 38 (expression -> ID .)
    :               reduce using rule 38 (expression -> ID .)
    '               reduce using rule 38 (expression -> ID .)
    [               shift and go to state 67
    =               reduce using rule 50 (lvalue -> ID .)
    ADDASSIGN       reduce using rule 50 (lvalue -> ID .)
    SUBASSIGN       reduce using rule 50 (lvalue -> ID .)
    MULASSIGN       reduce using rule 50 (lvalue -> ID .)
    DIVASSIGN       reduce using rule 50 (lvalue -> ID .)


state 23

    (41) expression -> INTNUM .

    ;               reduce using rule 41 (expression -> INTNUM .)
    +               reduce using rule 41 (expression -> INTNUM .)
    *               reduce using rule 41 (expression -> INTNUM .)
    -               reduce using rule 41 (expression -> INTNUM .)
    /               reduce using rule 41 (expression -> INTNUM .)
    DOTADD          reduce using rule 41 (expression -> INTNUM .)
    DOTSUB          reduce using rule 41 (expression -> INTNUM .)
    DOTMUL          reduce using rule 41 (expression -> INTNUM .)
    DOTDIV          reduce using rule 41 (expression -> INTNUM .)
    LE              reduce using rule 41 (expression -> INTNUM .)
    GE              reduce using rule 41 (expression -> INTNUM .)
    NE              reduce using rule 41 (expression -> INTNUM .)
    EQ              reduce using rule 41 (expression -> INTNUM .)
    <               reduce using rule 41 (expression -> INTNUM .)
    >               reduce using rule 41 (expression -> INTNUM .)
    :               reduce using rule 41 (expression -> INTNUM .)
    '               reduce using rule 41 (expression -> INTNUM .)
    )               reduce using rule 41 (expression -> INTNUM .)
    ]               reduce using rule 41 (expression -> INTNUM .)
    ,               reduce using rule 41 (expression -> INTNUM .)
    (               reduce using rule 41 (expression -> INTNUM .)
    [               reduce using rule 41 (expression -> INTNUM .)
    ZEROS           reduce using rule 41 (expression -> INTNUM .)
    ONES            reduce using rule 41 (expression -> INTNUM .)
    EYE             reduce using rule 41 (expression -> INTNUM .)
    !               reduce using rule 41 (expression -> INTNUM .)
    ID              reduce using rule 41 (expression -> INTNUM .)
    INTNUM          reduce using rule 41 (expression -> INTNUM .)
    FLOATNUM        reduce using rule 41 (expression -> INTNUM .)
    STRING          reduce using rule 41 (expression -> INTNUM .)
    BREAK           reduce using rule 41 (expression -> INTNUM .)
    CONTINUE        reduce using rule 41 (expression -> INTNUM .)
    RETURN          reduce using rule 41 (expression -> INTNUM .)
    PRINT           reduce using rule 41 (expression -> INTNUM .)
    FOR             reduce using rule 41 (expression -> INTNUM .)
    {               reduce using rule 41 (expression -> INTNUM .)
    IF              reduce using rule 41 (expression -> INTNUM .)
    WHILE           reduce using rule 41 (expression -> INTNUM .)


state 24

    (42) expression -> FLOATNUM .

    ;               reduce using rule 42 (expression -> FLOATNUM .)
    +               reduce using rule 42 (expression -> FLOATNUM .)
    *               reduce using rule 42 (expression -> FLOATNUM .)
    -               reduce using rule 42 (expression -> FLOATNUM .)
    /               reduce using rule 42 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 42 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 42 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 42 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 42 (expression -> FLOATNUM .)
    LE              reduce using rule 42 (expression -> FLOATNUM .)
    GE              reduce using rule 42 (expression -> FLOATNUM .)
    NE              reduce using rule 42 (expression -> FLOATNUM .)
    EQ              reduce using rule 42 (expression -> FLOATNUM .)
    <               reduce using rule 42 (expression -> FLOATNUM .)
    >               reduce using rule 42 (expression -> FLOATNUM .)
    :               reduce using rule 42 (expression -> FLOATNUM .)
    '               reduce using rule 42 (expression -> FLOATNUM .)
    )               reduce using rule 42 (expression -> FLOATNUM .)
    ]               reduce using rule 42 (expression -> FLOATNUM .)
    ,               reduce using rule 42 (expression -> FLOATNUM .)
    (               reduce using rule 42 (expression -> FLOATNUM .)
    [               reduce using rule 42 (expression -> FLOATNUM .)
    ZEROS           reduce using rule 42 (expression -> FLOATNUM .)
    ONES            reduce using rule 42 (expression -> FLOATNUM .)
    EYE             reduce using rule 42 (expression -> FLOATNUM .)
    !               reduce using rule 42 (expression -> FLOATNUM .)
    ID              reduce using rule 42 (expression -> FLOATNUM .)
    INTNUM          reduce using rule 42 (expression -> FLOATNUM .)
    FLOATNUM        reduce using rule 42 (expression -> FLOATNUM .)
    STRING          reduce using rule 42 (expression -> FLOATNUM .)
    BREAK           reduce using rule 42 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 42 (expression -> FLOATNUM .)
    RETURN          reduce using rule 42 (expression -> FLOATNUM .)
    PRINT           reduce using rule 42 (expression -> FLOATNUM .)
    FOR             reduce using rule 42 (expression -> FLOATNUM .)
    {               reduce using rule 42 (expression -> FLOATNUM .)
    IF              reduce using rule 42 (expression -> FLOATNUM .)
    WHILE           reduce using rule 42 (expression -> FLOATNUM .)


state 25

    (43) expression -> STRING .

    ;               reduce using rule 43 (expression -> STRING .)
    +               reduce using rule 43 (expression -> STRING .)
    *               reduce using rule 43 (expression -> STRING .)
    -               reduce using rule 43 (expression -> STRING .)
    /               reduce using rule 43 (expression -> STRING .)
    DOTADD          reduce using rule 43 (expression -> STRING .)
    DOTSUB          reduce using rule 43 (expression -> STRING .)
    DOTMUL          reduce using rule 43 (expression -> STRING .)
    DOTDIV          reduce using rule 43 (expression -> STRING .)
    LE              reduce using rule 43 (expression -> STRING .)
    GE              reduce using rule 43 (expression -> STRING .)
    NE              reduce using rule 43 (expression -> STRING .)
    EQ              reduce using rule 43 (expression -> STRING .)
    <               reduce using rule 43 (expression -> STRING .)
    >               reduce using rule 43 (expression -> STRING .)
    :               reduce using rule 43 (expression -> STRING .)
    '               reduce using rule 43 (expression -> STRING .)
    )               reduce using rule 43 (expression -> STRING .)
    ]               reduce using rule 43 (expression -> STRING .)
    ,               reduce using rule 43 (expression -> STRING .)
    (               reduce using rule 43 (expression -> STRING .)
    [               reduce using rule 43 (expression -> STRING .)
    ZEROS           reduce using rule 43 (expression -> STRING .)
    ONES            reduce using rule 43 (expression -> STRING .)
    EYE             reduce using rule 43 (expression -> STRING .)
    !               reduce using rule 43 (expression -> STRING .)
    ID              reduce using rule 43 (expression -> STRING .)
    INTNUM          reduce using rule 43 (expression -> STRING .)
    FLOATNUM        reduce using rule 43 (expression -> STRING .)
    STRING          reduce using rule 43 (expression -> STRING .)
    BREAK           reduce using rule 43 (expression -> STRING .)
    CONTINUE        reduce using rule 43 (expression -> STRING .)
    RETURN          reduce using rule 43 (expression -> STRING .)
    PRINT           reduce using rule 43 (expression -> STRING .)
    FOR             reduce using rule 43 (expression -> STRING .)
    {               reduce using rule 43 (expression -> STRING .)
    IF              reduce using rule 43 (expression -> STRING .)
    WHILE           reduce using rule 43 (expression -> STRING .)


state 26

    (45) assignment -> lvalue . = expression
    (46) assignment -> lvalue . ADDASSIGN expression
    (47) assignment -> lvalue . SUBASSIGN expression
    (48) assignment -> lvalue . MULASSIGN expression
    (49) assignment -> lvalue . DIVASSIGN expression

    =               shift and go to state 68
    ADDASSIGN       shift and go to state 69
    SUBASSIGN       shift and go to state 70
    MULASSIGN       shift and go to state 71
    DIVASSIGN       shift and go to state 72


state 27

    (58) break_statement -> BREAK .

    ;               reduce using rule 58 (break_statement -> BREAK .)


state 28

    (59) continue_statement -> CONTINUE .

    ;               reduce using rule 59 (continue_statement -> CONTINUE .)


state 29

    (60) return_statement -> RETURN . expression
    (61) return_statement -> RETURN .
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    ;               reduce using rule 61 (return_statement -> RETURN .)
    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 73

state 30

    (62) print_statement -> PRINT . expression_list
    (52) expression_list -> . expression
    (53) expression_list -> . expression_list , expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression_list                shift and go to state 74
    expression                     shift and go to state 62

state 31

    (57) for_statement -> FOR . ID = expression instruction

    ID              shift and go to state 75


state 32

    (16) compound_statement -> { . instructions_opt }
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . expression ;
    (7) instruction -> . assignment ;
    (8) instruction -> . break_statement ;
    (9) instruction -> . continue_statement ;
    (10) instruction -> . return_statement ;
    (11) instruction -> . print_statement ;
    (12) instruction -> . for_statement
    (13) instruction -> . compound_statement
    (14) instruction -> . if_statement
    (15) instruction -> . while_statement
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '
    (45) assignment -> . lvalue = expression
    (46) assignment -> . lvalue ADDASSIGN expression
    (47) assignment -> . lvalue SUBASSIGN expression
    (48) assignment -> . lvalue MULASSIGN expression
    (49) assignment -> . lvalue DIVASSIGN expression
    (58) break_statement -> . BREAK
    (59) continue_statement -> . CONTINUE
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) print_statement -> . PRINT expression_list
    (57) for_statement -> . FOR ID = expression instruction
    (16) compound_statement -> . { instructions_opt }
    (54) if_statement -> . IF ( expression ) instruction
    (55) if_statement -> . IF ( expression ) instruction ELSE instruction
    (56) while_statement -> . WHILE ( expression ) instruction
    (50) lvalue -> . ID
    (51) lvalue -> . ID [ expression_list ]

    }               reduce using rule 3 (instructions_opt -> .)
    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    {               shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    instructions_opt               shift and go to state 76
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    expression                     shift and go to state 5
    assignment                     shift and go to state 6
    break_statement                shift and go to state 7
    continue_statement             shift and go to state 8
    return_statement               shift and go to state 9
    print_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    compound_statement             shift and go to state 12
    if_statement                   shift and go to state 13
    while_statement                shift and go to state 14
    lvalue                         shift and go to state 26

state 33

    (54) if_statement -> IF . ( expression ) instruction
    (55) if_statement -> IF . ( expression ) instruction ELSE instruction

    (               shift and go to state 77


state 34

    (56) while_statement -> WHILE . ( expression ) instruction

    (               shift and go to state 78


state 35

    (4) instructions -> instructions instruction .

    (               reduce using rule 4 (instructions -> instructions instruction .)
    [               reduce using rule 4 (instructions -> instructions instruction .)
    ZEROS           reduce using rule 4 (instructions -> instructions instruction .)
    ONES            reduce using rule 4 (instructions -> instructions instruction .)
    EYE             reduce using rule 4 (instructions -> instructions instruction .)
    !               reduce using rule 4 (instructions -> instructions instruction .)
    -               reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    INTNUM          reduce using rule 4 (instructions -> instructions instruction .)
    FLOATNUM        reduce using rule 4 (instructions -> instructions instruction .)
    STRING          reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    {               reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)


state 36

    (6) instruction -> expression ; .

    (               reduce using rule 6 (instruction -> expression ; .)
    [               reduce using rule 6 (instruction -> expression ; .)
    ZEROS           reduce using rule 6 (instruction -> expression ; .)
    ONES            reduce using rule 6 (instruction -> expression ; .)
    EYE             reduce using rule 6 (instruction -> expression ; .)
    !               reduce using rule 6 (instruction -> expression ; .)
    -               reduce using rule 6 (instruction -> expression ; .)
    ID              reduce using rule 6 (instruction -> expression ; .)
    INTNUM          reduce using rule 6 (instruction -> expression ; .)
    FLOATNUM        reduce using rule 6 (instruction -> expression ; .)
    STRING          reduce using rule 6 (instruction -> expression ; .)
    BREAK           reduce using rule 6 (instruction -> expression ; .)
    CONTINUE        reduce using rule 6 (instruction -> expression ; .)
    RETURN          reduce using rule 6 (instruction -> expression ; .)
    PRINT           reduce using rule 6 (instruction -> expression ; .)
    FOR             reduce using rule 6 (instruction -> expression ; .)
    {               reduce using rule 6 (instruction -> expression ; .)
    IF              reduce using rule 6 (instruction -> expression ; .)
    WHILE           reduce using rule 6 (instruction -> expression ; .)
    $end            reduce using rule 6 (instruction -> expression ; .)
    }               reduce using rule 6 (instruction -> expression ; .)
    ELSE            reduce using rule 6 (instruction -> expression ; .)


state 37

    (17) expression -> expression + . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 79

state 38

    (18) expression -> expression * . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 80

state 39

    (19) expression -> expression - . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 81

state 40

    (20) expression -> expression / . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 82

state 41

    (21) expression -> expression DOTADD . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 83

state 42

    (22) expression -> expression DOTSUB . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 84

state 43

    (23) expression -> expression DOTMUL . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 85

state 44

    (24) expression -> expression DOTDIV . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 86

state 45

    (25) expression -> expression LE . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 87

state 46

    (26) expression -> expression GE . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 88

state 47

    (27) expression -> expression NE . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 89

state 48

    (28) expression -> expression EQ . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 90

state 49

    (29) expression -> expression < . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 91

state 50

    (30) expression -> expression > . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 92

state 51

    (40) expression -> expression : . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 93

state 52

    (44) expression -> expression ' .

    ;               reduce using rule 44 (expression -> expression ' .)
    +               reduce using rule 44 (expression -> expression ' .)
    *               reduce using rule 44 (expression -> expression ' .)
    -               reduce using rule 44 (expression -> expression ' .)
    /               reduce using rule 44 (expression -> expression ' .)
    DOTADD          reduce using rule 44 (expression -> expression ' .)
    DOTSUB          reduce using rule 44 (expression -> expression ' .)
    DOTMUL          reduce using rule 44 (expression -> expression ' .)
    DOTDIV          reduce using rule 44 (expression -> expression ' .)
    LE              reduce using rule 44 (expression -> expression ' .)
    GE              reduce using rule 44 (expression -> expression ' .)
    NE              reduce using rule 44 (expression -> expression ' .)
    EQ              reduce using rule 44 (expression -> expression ' .)
    <               reduce using rule 44 (expression -> expression ' .)
    >               reduce using rule 44 (expression -> expression ' .)
    :               reduce using rule 44 (expression -> expression ' .)
    '               reduce using rule 44 (expression -> expression ' .)
    )               reduce using rule 44 (expression -> expression ' .)
    ]               reduce using rule 44 (expression -> expression ' .)
    ,               reduce using rule 44 (expression -> expression ' .)
    (               reduce using rule 44 (expression -> expression ' .)
    [               reduce using rule 44 (expression -> expression ' .)
    ZEROS           reduce using rule 44 (expression -> expression ' .)
    ONES            reduce using rule 44 (expression -> expression ' .)
    EYE             reduce using rule 44 (expression -> expression ' .)
    !               reduce using rule 44 (expression -> expression ' .)
    ID              reduce using rule 44 (expression -> expression ' .)
    INTNUM          reduce using rule 44 (expression -> expression ' .)
    FLOATNUM        reduce using rule 44 (expression -> expression ' .)
    STRING          reduce using rule 44 (expression -> expression ' .)
    BREAK           reduce using rule 44 (expression -> expression ' .)
    CONTINUE        reduce using rule 44 (expression -> expression ' .)
    RETURN          reduce using rule 44 (expression -> expression ' .)
    PRINT           reduce using rule 44 (expression -> expression ' .)
    FOR             reduce using rule 44 (expression -> expression ' .)
    {               reduce using rule 44 (expression -> expression ' .)
    IF              reduce using rule 44 (expression -> expression ' .)
    WHILE           reduce using rule 44 (expression -> expression ' .)


state 53

    (7) instruction -> assignment ; .

    (               reduce using rule 7 (instruction -> assignment ; .)
    [               reduce using rule 7 (instruction -> assignment ; .)
    ZEROS           reduce using rule 7 (instruction -> assignment ; .)
    ONES            reduce using rule 7 (instruction -> assignment ; .)
    EYE             reduce using rule 7 (instruction -> assignment ; .)
    !               reduce using rule 7 (instruction -> assignment ; .)
    -               reduce using rule 7 (instruction -> assignment ; .)
    ID              reduce using rule 7 (instruction -> assignment ; .)
    INTNUM          reduce using rule 7 (instruction -> assignment ; .)
    FLOATNUM        reduce using rule 7 (instruction -> assignment ; .)
    STRING          reduce using rule 7 (instruction -> assignment ; .)
    BREAK           reduce using rule 7 (instruction -> assignment ; .)
    CONTINUE        reduce using rule 7 (instruction -> assignment ; .)
    RETURN          reduce using rule 7 (instruction -> assignment ; .)
    PRINT           reduce using rule 7 (instruction -> assignment ; .)
    FOR             reduce using rule 7 (instruction -> assignment ; .)
    {               reduce using rule 7 (instruction -> assignment ; .)
    IF              reduce using rule 7 (instruction -> assignment ; .)
    WHILE           reduce using rule 7 (instruction -> assignment ; .)
    $end            reduce using rule 7 (instruction -> assignment ; .)
    }               reduce using rule 7 (instruction -> assignment ; .)
    ELSE            reduce using rule 7 (instruction -> assignment ; .)


state 54

    (8) instruction -> break_statement ; .

    (               reduce using rule 8 (instruction -> break_statement ; .)
    [               reduce using rule 8 (instruction -> break_statement ; .)
    ZEROS           reduce using rule 8 (instruction -> break_statement ; .)
    ONES            reduce using rule 8 (instruction -> break_statement ; .)
    EYE             reduce using rule 8 (instruction -> break_statement ; .)
    !               reduce using rule 8 (instruction -> break_statement ; .)
    -               reduce using rule 8 (instruction -> break_statement ; .)
    ID              reduce using rule 8 (instruction -> break_statement ; .)
    INTNUM          reduce using rule 8 (instruction -> break_statement ; .)
    FLOATNUM        reduce using rule 8 (instruction -> break_statement ; .)
    STRING          reduce using rule 8 (instruction -> break_statement ; .)
    BREAK           reduce using rule 8 (instruction -> break_statement ; .)
    CONTINUE        reduce using rule 8 (instruction -> break_statement ; .)
    RETURN          reduce using rule 8 (instruction -> break_statement ; .)
    PRINT           reduce using rule 8 (instruction -> break_statement ; .)
    FOR             reduce using rule 8 (instruction -> break_statement ; .)
    {               reduce using rule 8 (instruction -> break_statement ; .)
    IF              reduce using rule 8 (instruction -> break_statement ; .)
    WHILE           reduce using rule 8 (instruction -> break_statement ; .)
    $end            reduce using rule 8 (instruction -> break_statement ; .)
    }               reduce using rule 8 (instruction -> break_statement ; .)
    ELSE            reduce using rule 8 (instruction -> break_statement ; .)


state 55

    (9) instruction -> continue_statement ; .

    (               reduce using rule 9 (instruction -> continue_statement ; .)
    [               reduce using rule 9 (instruction -> continue_statement ; .)
    ZEROS           reduce using rule 9 (instruction -> continue_statement ; .)
    ONES            reduce using rule 9 (instruction -> continue_statement ; .)
    EYE             reduce using rule 9 (instruction -> continue_statement ; .)
    !               reduce using rule 9 (instruction -> continue_statement ; .)
    -               reduce using rule 9 (instruction -> continue_statement ; .)
    ID              reduce using rule 9 (instruction -> continue_statement ; .)
    INTNUM          reduce using rule 9 (instruction -> continue_statement ; .)
    FLOATNUM        reduce using rule 9 (instruction -> continue_statement ; .)
    STRING          reduce using rule 9 (instruction -> continue_statement ; .)
    BREAK           reduce using rule 9 (instruction -> continue_statement ; .)
    CONTINUE        reduce using rule 9 (instruction -> continue_statement ; .)
    RETURN          reduce using rule 9 (instruction -> continue_statement ; .)
    PRINT           reduce using rule 9 (instruction -> continue_statement ; .)
    FOR             reduce using rule 9 (instruction -> continue_statement ; .)
    {               reduce using rule 9 (instruction -> continue_statement ; .)
    IF              reduce using rule 9 (instruction -> continue_statement ; .)
    WHILE           reduce using rule 9 (instruction -> continue_statement ; .)
    $end            reduce using rule 9 (instruction -> continue_statement ; .)
    }               reduce using rule 9 (instruction -> continue_statement ; .)
    ELSE            reduce using rule 9 (instruction -> continue_statement ; .)


state 56

    (10) instruction -> return_statement ; .

    (               reduce using rule 10 (instruction -> return_statement ; .)
    [               reduce using rule 10 (instruction -> return_statement ; .)
    ZEROS           reduce using rule 10 (instruction -> return_statement ; .)
    ONES            reduce using rule 10 (instruction -> return_statement ; .)
    EYE             reduce using rule 10 (instruction -> return_statement ; .)
    !               reduce using rule 10 (instruction -> return_statement ; .)
    -               reduce using rule 10 (instruction -> return_statement ; .)
    ID              reduce using rule 10 (instruction -> return_statement ; .)
    INTNUM          reduce using rule 10 (instruction -> return_statement ; .)
    FLOATNUM        reduce using rule 10 (instruction -> return_statement ; .)
    STRING          reduce using rule 10 (instruction -> return_statement ; .)
    BREAK           reduce using rule 10 (instruction -> return_statement ; .)
    CONTINUE        reduce using rule 10 (instruction -> return_statement ; .)
    RETURN          reduce using rule 10 (instruction -> return_statement ; .)
    PRINT           reduce using rule 10 (instruction -> return_statement ; .)
    FOR             reduce using rule 10 (instruction -> return_statement ; .)
    {               reduce using rule 10 (instruction -> return_statement ; .)
    IF              reduce using rule 10 (instruction -> return_statement ; .)
    WHILE           reduce using rule 10 (instruction -> return_statement ; .)
    $end            reduce using rule 10 (instruction -> return_statement ; .)
    }               reduce using rule 10 (instruction -> return_statement ; .)
    ELSE            reduce using rule 10 (instruction -> return_statement ; .)


state 57

    (11) instruction -> print_statement ; .

    (               reduce using rule 11 (instruction -> print_statement ; .)
    [               reduce using rule 11 (instruction -> print_statement ; .)
    ZEROS           reduce using rule 11 (instruction -> print_statement ; .)
    ONES            reduce using rule 11 (instruction -> print_statement ; .)
    EYE             reduce using rule 11 (instruction -> print_statement ; .)
    !               reduce using rule 11 (instruction -> print_statement ; .)
    -               reduce using rule 11 (instruction -> print_statement ; .)
    ID              reduce using rule 11 (instruction -> print_statement ; .)
    INTNUM          reduce using rule 11 (instruction -> print_statement ; .)
    FLOATNUM        reduce using rule 11 (instruction -> print_statement ; .)
    STRING          reduce using rule 11 (instruction -> print_statement ; .)
    BREAK           reduce using rule 11 (instruction -> print_statement ; .)
    CONTINUE        reduce using rule 11 (instruction -> print_statement ; .)
    RETURN          reduce using rule 11 (instruction -> print_statement ; .)
    PRINT           reduce using rule 11 (instruction -> print_statement ; .)
    FOR             reduce using rule 11 (instruction -> print_statement ; .)
    {               reduce using rule 11 (instruction -> print_statement ; .)
    IF              reduce using rule 11 (instruction -> print_statement ; .)
    WHILE           reduce using rule 11 (instruction -> print_statement ; .)
    $end            reduce using rule 11 (instruction -> print_statement ; .)
    }               reduce using rule 11 (instruction -> print_statement ; .)
    ELSE            reduce using rule 11 (instruction -> print_statement ; .)


state 58

    (37) expression -> - expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 37 (expression -> - expression .)
    +               reduce using rule 37 (expression -> - expression .)
    *               reduce using rule 37 (expression -> - expression .)
    -               reduce using rule 37 (expression -> - expression .)
    /               reduce using rule 37 (expression -> - expression .)
    DOTADD          reduce using rule 37 (expression -> - expression .)
    DOTSUB          reduce using rule 37 (expression -> - expression .)
    DOTMUL          reduce using rule 37 (expression -> - expression .)
    DOTDIV          reduce using rule 37 (expression -> - expression .)
    LE              reduce using rule 37 (expression -> - expression .)
    GE              reduce using rule 37 (expression -> - expression .)
    NE              reduce using rule 37 (expression -> - expression .)
    EQ              reduce using rule 37 (expression -> - expression .)
    <               reduce using rule 37 (expression -> - expression .)
    >               reduce using rule 37 (expression -> - expression .)
    :               reduce using rule 37 (expression -> - expression .)
    )               reduce using rule 37 (expression -> - expression .)
    ]               reduce using rule 37 (expression -> - expression .)
    ,               reduce using rule 37 (expression -> - expression .)
    (               reduce using rule 37 (expression -> - expression .)
    [               reduce using rule 37 (expression -> - expression .)
    ZEROS           reduce using rule 37 (expression -> - expression .)
    ONES            reduce using rule 37 (expression -> - expression .)
    EYE             reduce using rule 37 (expression -> - expression .)
    !               reduce using rule 37 (expression -> - expression .)
    ID              reduce using rule 37 (expression -> - expression .)
    INTNUM          reduce using rule 37 (expression -> - expression .)
    FLOATNUM        reduce using rule 37 (expression -> - expression .)
    STRING          reduce using rule 37 (expression -> - expression .)
    BREAK           reduce using rule 37 (expression -> - expression .)
    CONTINUE        reduce using rule 37 (expression -> - expression .)
    RETURN          reduce using rule 37 (expression -> - expression .)
    PRINT           reduce using rule 37 (expression -> - expression .)
    FOR             reduce using rule 37 (expression -> - expression .)
    {               reduce using rule 37 (expression -> - expression .)
    IF              reduce using rule 37 (expression -> - expression .)
    WHILE           reduce using rule 37 (expression -> - expression .)
    '               shift and go to state 52

  ! '               [ reduce using rule 37 (expression -> - expression .) ]
  ! +               [ shift and go to state 37 ]
  ! *               [ shift and go to state 38 ]
  ! -               [ shift and go to state 39 ]
  ! /               [ shift and go to state 40 ]
  ! DOTADD          [ shift and go to state 41 ]
  ! DOTSUB          [ shift and go to state 42 ]
  ! DOTMUL          [ shift and go to state 43 ]
  ! DOTDIV          [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]
  ! :               [ shift and go to state 51 ]


state 59

    (38) expression -> ID .
    (39) expression -> ID . [ expression_list ]

    +               reduce using rule 38 (expression -> ID .)
    *               reduce using rule 38 (expression -> ID .)
    -               reduce using rule 38 (expression -> ID .)
    /               reduce using rule 38 (expression -> ID .)
    DOTADD          reduce using rule 38 (expression -> ID .)
    DOTSUB          reduce using rule 38 (expression -> ID .)
    DOTMUL          reduce using rule 38 (expression -> ID .)
    DOTDIV          reduce using rule 38 (expression -> ID .)
    LE              reduce using rule 38 (expression -> ID .)
    GE              reduce using rule 38 (expression -> ID .)
    NE              reduce using rule 38 (expression -> ID .)
    EQ              reduce using rule 38 (expression -> ID .)
    <               reduce using rule 38 (expression -> ID .)
    >               reduce using rule 38 (expression -> ID .)
    :               reduce using rule 38 (expression -> ID .)
    '               reduce using rule 38 (expression -> ID .)
    ;               reduce using rule 38 (expression -> ID .)
    )               reduce using rule 38 (expression -> ID .)
    ]               reduce using rule 38 (expression -> ID .)
    ,               reduce using rule 38 (expression -> ID .)
    (               reduce using rule 38 (expression -> ID .)
    ZEROS           reduce using rule 38 (expression -> ID .)
    ONES            reduce using rule 38 (expression -> ID .)
    EYE             reduce using rule 38 (expression -> ID .)
    !               reduce using rule 38 (expression -> ID .)
    ID              reduce using rule 38 (expression -> ID .)
    INTNUM          reduce using rule 38 (expression -> ID .)
    FLOATNUM        reduce using rule 38 (expression -> ID .)
    STRING          reduce using rule 38 (expression -> ID .)
    BREAK           reduce using rule 38 (expression -> ID .)
    CONTINUE        reduce using rule 38 (expression -> ID .)
    RETURN          reduce using rule 38 (expression -> ID .)
    PRINT           reduce using rule 38 (expression -> ID .)
    FOR             reduce using rule 38 (expression -> ID .)
    {               reduce using rule 38 (expression -> ID .)
    IF              reduce using rule 38 (expression -> ID .)
    WHILE           reduce using rule 38 (expression -> ID .)
    [               shift and go to state 94

  ! [               [ reduce using rule 38 (expression -> ID .) ]


state 60

    (31) expression -> ( expression . )
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    )               shift and go to state 95
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52


state 61

    (32) expression -> [ expression_list . ]
    (53) expression_list -> expression_list . , expression

    ]               shift and go to state 96
    ,               shift and go to state 97


state 62

    (52) expression_list -> expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ]               reduce using rule 52 (expression_list -> expression .)
    ,               reduce using rule 52 (expression_list -> expression .)
    ;               reduce using rule 52 (expression_list -> expression .)
    )               reduce using rule 52 (expression_list -> expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52


state 63

    (33) expression -> ZEROS ( . expression_list )
    (52) expression_list -> . expression
    (53) expression_list -> . expression_list , expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression_list                shift and go to state 98
    expression                     shift and go to state 62

state 64

    (34) expression -> ONES ( . expression_list )
    (52) expression_list -> . expression
    (53) expression_list -> . expression_list , expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression_list                shift and go to state 99
    expression                     shift and go to state 62

state 65

    (35) expression -> EYE ( . expression_list )
    (52) expression_list -> . expression
    (53) expression_list -> . expression_list , expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression_list                shift and go to state 100
    expression                     shift and go to state 62

state 66

    (36) expression -> ! expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 36 (expression -> ! expression .)
    +               reduce using rule 36 (expression -> ! expression .)
    *               reduce using rule 36 (expression -> ! expression .)
    -               reduce using rule 36 (expression -> ! expression .)
    /               reduce using rule 36 (expression -> ! expression .)
    DOTADD          reduce using rule 36 (expression -> ! expression .)
    DOTSUB          reduce using rule 36 (expression -> ! expression .)
    DOTMUL          reduce using rule 36 (expression -> ! expression .)
    DOTDIV          reduce using rule 36 (expression -> ! expression .)
    LE              reduce using rule 36 (expression -> ! expression .)
    GE              reduce using rule 36 (expression -> ! expression .)
    NE              reduce using rule 36 (expression -> ! expression .)
    EQ              reduce using rule 36 (expression -> ! expression .)
    <               reduce using rule 36 (expression -> ! expression .)
    >               reduce using rule 36 (expression -> ! expression .)
    )               reduce using rule 36 (expression -> ! expression .)
    ]               reduce using rule 36 (expression -> ! expression .)
    ,               reduce using rule 36 (expression -> ! expression .)
    (               reduce using rule 36 (expression -> ! expression .)
    [               reduce using rule 36 (expression -> ! expression .)
    ZEROS           reduce using rule 36 (expression -> ! expression .)
    ONES            reduce using rule 36 (expression -> ! expression .)
    EYE             reduce using rule 36 (expression -> ! expression .)
    !               reduce using rule 36 (expression -> ! expression .)
    ID              reduce using rule 36 (expression -> ! expression .)
    INTNUM          reduce using rule 36 (expression -> ! expression .)
    FLOATNUM        reduce using rule 36 (expression -> ! expression .)
    STRING          reduce using rule 36 (expression -> ! expression .)
    BREAK           reduce using rule 36 (expression -> ! expression .)
    CONTINUE        reduce using rule 36 (expression -> ! expression .)
    RETURN          reduce using rule 36 (expression -> ! expression .)
    PRINT           reduce using rule 36 (expression -> ! expression .)
    FOR             reduce using rule 36 (expression -> ! expression .)
    {               reduce using rule 36 (expression -> ! expression .)
    IF              reduce using rule 36 (expression -> ! expression .)
    WHILE           reduce using rule 36 (expression -> ! expression .)
    :               shift and go to state 51
    '               shift and go to state 52

  ! :               [ reduce using rule 36 (expression -> ! expression .) ]
  ! '               [ reduce using rule 36 (expression -> ! expression .) ]
  ! +               [ shift and go to state 37 ]
  ! *               [ shift and go to state 38 ]
  ! -               [ shift and go to state 39 ]
  ! /               [ shift and go to state 40 ]
  ! DOTADD          [ shift and go to state 41 ]
  ! DOTSUB          [ shift and go to state 42 ]
  ! DOTMUL          [ shift and go to state 43 ]
  ! DOTDIV          [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 67

    (39) expression -> ID [ . expression_list ]
    (51) lvalue -> ID [ . expression_list ]
    (52) expression_list -> . expression
    (53) expression_list -> . expression_list , expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression_list                shift and go to state 101
    expression                     shift and go to state 62

state 68

    (45) assignment -> lvalue = . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 102

state 69

    (46) assignment -> lvalue ADDASSIGN . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 103

state 70

    (47) assignment -> lvalue SUBASSIGN . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 104

state 71

    (48) assignment -> lvalue MULASSIGN . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 105

state 72

    (49) assignment -> lvalue DIVASSIGN . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 106

state 73

    (60) return_statement -> RETURN expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 60 (return_statement -> RETURN expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52


state 74

    (62) print_statement -> PRINT expression_list .
    (53) expression_list -> expression_list . , expression

    ;               reduce using rule 62 (print_statement -> PRINT expression_list .)
    ,               shift and go to state 97


state 75

    (57) for_statement -> FOR ID . = expression instruction

    =               shift and go to state 107


state 76

    (16) compound_statement -> { instructions_opt . }

    }               shift and go to state 108


state 77

    (54) if_statement -> IF ( . expression ) instruction
    (55) if_statement -> IF ( . expression ) instruction ELSE instruction
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 109

state 78

    (56) while_statement -> WHILE ( . expression ) instruction
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 110

state 79

    (17) expression -> expression + expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 17 (expression -> expression + expression .)
    +               reduce using rule 17 (expression -> expression + expression .)
    -               reduce using rule 17 (expression -> expression + expression .)
    DOTADD          reduce using rule 17 (expression -> expression + expression .)
    DOTSUB          reduce using rule 17 (expression -> expression + expression .)
    LE              reduce using rule 17 (expression -> expression + expression .)
    GE              reduce using rule 17 (expression -> expression + expression .)
    NE              reduce using rule 17 (expression -> expression + expression .)
    EQ              reduce using rule 17 (expression -> expression + expression .)
    <               reduce using rule 17 (expression -> expression + expression .)
    >               reduce using rule 17 (expression -> expression + expression .)
    )               reduce using rule 17 (expression -> expression + expression .)
    ]               reduce using rule 17 (expression -> expression + expression .)
    ,               reduce using rule 17 (expression -> expression + expression .)
    (               reduce using rule 17 (expression -> expression + expression .)
    [               reduce using rule 17 (expression -> expression + expression .)
    ZEROS           reduce using rule 17 (expression -> expression + expression .)
    ONES            reduce using rule 17 (expression -> expression + expression .)
    EYE             reduce using rule 17 (expression -> expression + expression .)
    !               reduce using rule 17 (expression -> expression + expression .)
    ID              reduce using rule 17 (expression -> expression + expression .)
    INTNUM          reduce using rule 17 (expression -> expression + expression .)
    FLOATNUM        reduce using rule 17 (expression -> expression + expression .)
    STRING          reduce using rule 17 (expression -> expression + expression .)
    BREAK           reduce using rule 17 (expression -> expression + expression .)
    CONTINUE        reduce using rule 17 (expression -> expression + expression .)
    RETURN          reduce using rule 17 (expression -> expression + expression .)
    PRINT           reduce using rule 17 (expression -> expression + expression .)
    FOR             reduce using rule 17 (expression -> expression + expression .)
    {               reduce using rule 17 (expression -> expression + expression .)
    IF              reduce using rule 17 (expression -> expression + expression .)
    WHILE           reduce using rule 17 (expression -> expression + expression .)
    *               shift and go to state 38
    /               shift and go to state 40
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    :               shift and go to state 51
    '               shift and go to state 52

  ! *               [ reduce using rule 17 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 17 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 17 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 17 (expression -> expression + expression .) ]
  ! :               [ reduce using rule 17 (expression -> expression + expression .) ]
  ! '               [ reduce using rule 17 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 37 ]
  ! -               [ shift and go to state 39 ]
  ! DOTADD          [ shift and go to state 41 ]
  ! DOTSUB          [ shift and go to state 42 ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 80

    (18) expression -> expression * expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 18 (expression -> expression * expression .)
    +               reduce using rule 18 (expression -> expression * expression .)
    *               reduce using rule 18 (expression -> expression * expression .)
    -               reduce using rule 18 (expression -> expression * expression .)
    /               reduce using rule 18 (expression -> expression * expression .)
    DOTADD          reduce using rule 18 (expression -> expression * expression .)
    DOTSUB          reduce using rule 18 (expression -> expression * expression .)
    DOTMUL          reduce using rule 18 (expression -> expression * expression .)
    DOTDIV          reduce using rule 18 (expression -> expression * expression .)
    LE              reduce using rule 18 (expression -> expression * expression .)
    GE              reduce using rule 18 (expression -> expression * expression .)
    NE              reduce using rule 18 (expression -> expression * expression .)
    EQ              reduce using rule 18 (expression -> expression * expression .)
    <               reduce using rule 18 (expression -> expression * expression .)
    >               reduce using rule 18 (expression -> expression * expression .)
    )               reduce using rule 18 (expression -> expression * expression .)
    ]               reduce using rule 18 (expression -> expression * expression .)
    ,               reduce using rule 18 (expression -> expression * expression .)
    (               reduce using rule 18 (expression -> expression * expression .)
    [               reduce using rule 18 (expression -> expression * expression .)
    ZEROS           reduce using rule 18 (expression -> expression * expression .)
    ONES            reduce using rule 18 (expression -> expression * expression .)
    EYE             reduce using rule 18 (expression -> expression * expression .)
    !               reduce using rule 18 (expression -> expression * expression .)
    ID              reduce using rule 18 (expression -> expression * expression .)
    INTNUM          reduce using rule 18 (expression -> expression * expression .)
    FLOATNUM        reduce using rule 18 (expression -> expression * expression .)
    STRING          reduce using rule 18 (expression -> expression * expression .)
    BREAK           reduce using rule 18 (expression -> expression * expression .)
    CONTINUE        reduce using rule 18 (expression -> expression * expression .)
    RETURN          reduce using rule 18 (expression -> expression * expression .)
    PRINT           reduce using rule 18 (expression -> expression * expression .)
    FOR             reduce using rule 18 (expression -> expression * expression .)
    {               reduce using rule 18 (expression -> expression * expression .)
    IF              reduce using rule 18 (expression -> expression * expression .)
    WHILE           reduce using rule 18 (expression -> expression * expression .)
    :               shift and go to state 51
    '               shift and go to state 52

  ! :               [ reduce using rule 18 (expression -> expression * expression .) ]
  ! '               [ reduce using rule 18 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 37 ]
  ! *               [ shift and go to state 38 ]
  ! -               [ shift and go to state 39 ]
  ! /               [ shift and go to state 40 ]
  ! DOTADD          [ shift and go to state 41 ]
  ! DOTSUB          [ shift and go to state 42 ]
  ! DOTMUL          [ shift and go to state 43 ]
  ! DOTDIV          [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 81

    (19) expression -> expression - expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 19 (expression -> expression - expression .)
    +               reduce using rule 19 (expression -> expression - expression .)
    -               reduce using rule 19 (expression -> expression - expression .)
    DOTADD          reduce using rule 19 (expression -> expression - expression .)
    DOTSUB          reduce using rule 19 (expression -> expression - expression .)
    LE              reduce using rule 19 (expression -> expression - expression .)
    GE              reduce using rule 19 (expression -> expression - expression .)
    NE              reduce using rule 19 (expression -> expression - expression .)
    EQ              reduce using rule 19 (expression -> expression - expression .)
    <               reduce using rule 19 (expression -> expression - expression .)
    >               reduce using rule 19 (expression -> expression - expression .)
    )               reduce using rule 19 (expression -> expression - expression .)
    ]               reduce using rule 19 (expression -> expression - expression .)
    ,               reduce using rule 19 (expression -> expression - expression .)
    (               reduce using rule 19 (expression -> expression - expression .)
    [               reduce using rule 19 (expression -> expression - expression .)
    ZEROS           reduce using rule 19 (expression -> expression - expression .)
    ONES            reduce using rule 19 (expression -> expression - expression .)
    EYE             reduce using rule 19 (expression -> expression - expression .)
    !               reduce using rule 19 (expression -> expression - expression .)
    ID              reduce using rule 19 (expression -> expression - expression .)
    INTNUM          reduce using rule 19 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 19 (expression -> expression - expression .)
    STRING          reduce using rule 19 (expression -> expression - expression .)
    BREAK           reduce using rule 19 (expression -> expression - expression .)
    CONTINUE        reduce using rule 19 (expression -> expression - expression .)
    RETURN          reduce using rule 19 (expression -> expression - expression .)
    PRINT           reduce using rule 19 (expression -> expression - expression .)
    FOR             reduce using rule 19 (expression -> expression - expression .)
    {               reduce using rule 19 (expression -> expression - expression .)
    IF              reduce using rule 19 (expression -> expression - expression .)
    WHILE           reduce using rule 19 (expression -> expression - expression .)
    *               shift and go to state 38
    /               shift and go to state 40
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    :               shift and go to state 51
    '               shift and go to state 52

  ! *               [ reduce using rule 19 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 19 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 19 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 19 (expression -> expression - expression .) ]
  ! :               [ reduce using rule 19 (expression -> expression - expression .) ]
  ! '               [ reduce using rule 19 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 37 ]
  ! -               [ shift and go to state 39 ]
  ! DOTADD          [ shift and go to state 41 ]
  ! DOTSUB          [ shift and go to state 42 ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 82

    (20) expression -> expression / expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 20 (expression -> expression / expression .)
    +               reduce using rule 20 (expression -> expression / expression .)
    *               reduce using rule 20 (expression -> expression / expression .)
    -               reduce using rule 20 (expression -> expression / expression .)
    /               reduce using rule 20 (expression -> expression / expression .)
    DOTADD          reduce using rule 20 (expression -> expression / expression .)
    DOTSUB          reduce using rule 20 (expression -> expression / expression .)
    DOTMUL          reduce using rule 20 (expression -> expression / expression .)
    DOTDIV          reduce using rule 20 (expression -> expression / expression .)
    LE              reduce using rule 20 (expression -> expression / expression .)
    GE              reduce using rule 20 (expression -> expression / expression .)
    NE              reduce using rule 20 (expression -> expression / expression .)
    EQ              reduce using rule 20 (expression -> expression / expression .)
    <               reduce using rule 20 (expression -> expression / expression .)
    >               reduce using rule 20 (expression -> expression / expression .)
    )               reduce using rule 20 (expression -> expression / expression .)
    ]               reduce using rule 20 (expression -> expression / expression .)
    ,               reduce using rule 20 (expression -> expression / expression .)
    (               reduce using rule 20 (expression -> expression / expression .)
    [               reduce using rule 20 (expression -> expression / expression .)
    ZEROS           reduce using rule 20 (expression -> expression / expression .)
    ONES            reduce using rule 20 (expression -> expression / expression .)
    EYE             reduce using rule 20 (expression -> expression / expression .)
    !               reduce using rule 20 (expression -> expression / expression .)
    ID              reduce using rule 20 (expression -> expression / expression .)
    INTNUM          reduce using rule 20 (expression -> expression / expression .)
    FLOATNUM        reduce using rule 20 (expression -> expression / expression .)
    STRING          reduce using rule 20 (expression -> expression / expression .)
    BREAK           reduce using rule 20 (expression -> expression / expression .)
    CONTINUE        reduce using rule 20 (expression -> expression / expression .)
    RETURN          reduce using rule 20 (expression -> expression / expression .)
    PRINT           reduce using rule 20 (expression -> expression / expression .)
    FOR             reduce using rule 20 (expression -> expression / expression .)
    {               reduce using rule 20 (expression -> expression / expression .)
    IF              reduce using rule 20 (expression -> expression / expression .)
    WHILE           reduce using rule 20 (expression -> expression / expression .)
    :               shift and go to state 51
    '               shift and go to state 52

  ! :               [ reduce using rule 20 (expression -> expression / expression .) ]
  ! '               [ reduce using rule 20 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 37 ]
  ! *               [ shift and go to state 38 ]
  ! -               [ shift and go to state 39 ]
  ! /               [ shift and go to state 40 ]
  ! DOTADD          [ shift and go to state 41 ]
  ! DOTSUB          [ shift and go to state 42 ]
  ! DOTMUL          [ shift and go to state 43 ]
  ! DOTDIV          [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 83

    (21) expression -> expression DOTADD expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 21 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 21 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 21 (expression -> expression DOTADD expression .)
    LE              reduce using rule 21 (expression -> expression DOTADD expression .)
    GE              reduce using rule 21 (expression -> expression DOTADD expression .)
    NE              reduce using rule 21 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 21 (expression -> expression DOTADD expression .)
    <               reduce using rule 21 (expression -> expression DOTADD expression .)
    >               reduce using rule 21 (expression -> expression DOTADD expression .)
    )               reduce using rule 21 (expression -> expression DOTADD expression .)
    ]               reduce using rule 21 (expression -> expression DOTADD expression .)
    ,               reduce using rule 21 (expression -> expression DOTADD expression .)
    (               reduce using rule 21 (expression -> expression DOTADD expression .)
    [               reduce using rule 21 (expression -> expression DOTADD expression .)
    ZEROS           reduce using rule 21 (expression -> expression DOTADD expression .)
    ONES            reduce using rule 21 (expression -> expression DOTADD expression .)
    EYE             reduce using rule 21 (expression -> expression DOTADD expression .)
    !               reduce using rule 21 (expression -> expression DOTADD expression .)
    ID              reduce using rule 21 (expression -> expression DOTADD expression .)
    INTNUM          reduce using rule 21 (expression -> expression DOTADD expression .)
    FLOATNUM        reduce using rule 21 (expression -> expression DOTADD expression .)
    STRING          reduce using rule 21 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 21 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 21 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 21 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 21 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 21 (expression -> expression DOTADD expression .)
    {               reduce using rule 21 (expression -> expression DOTADD expression .)
    IF              reduce using rule 21 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 21 (expression -> expression DOTADD expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    :               shift and go to state 51
    '               shift and go to state 52

  ! +               [ reduce using rule 21 (expression -> expression DOTADD expression .) ]
  ! *               [ reduce using rule 21 (expression -> expression DOTADD expression .) ]
  ! -               [ reduce using rule 21 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 21 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 21 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 21 (expression -> expression DOTADD expression .) ]
  ! :               [ reduce using rule 21 (expression -> expression DOTADD expression .) ]
  ! '               [ reduce using rule 21 (expression -> expression DOTADD expression .) ]
  ! DOTADD          [ shift and go to state 41 ]
  ! DOTSUB          [ shift and go to state 42 ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 84

    (22) expression -> expression DOTSUB expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 22 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 22 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 22 (expression -> expression DOTSUB expression .)
    LE              reduce using rule 22 (expression -> expression DOTSUB expression .)
    GE              reduce using rule 22 (expression -> expression DOTSUB expression .)
    NE              reduce using rule 22 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 22 (expression -> expression DOTSUB expression .)
    <               reduce using rule 22 (expression -> expression DOTSUB expression .)
    >               reduce using rule 22 (expression -> expression DOTSUB expression .)
    )               reduce using rule 22 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 22 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 22 (expression -> expression DOTSUB expression .)
    (               reduce using rule 22 (expression -> expression DOTSUB expression .)
    [               reduce using rule 22 (expression -> expression DOTSUB expression .)
    ZEROS           reduce using rule 22 (expression -> expression DOTSUB expression .)
    ONES            reduce using rule 22 (expression -> expression DOTSUB expression .)
    EYE             reduce using rule 22 (expression -> expression DOTSUB expression .)
    !               reduce using rule 22 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 22 (expression -> expression DOTSUB expression .)
    INTNUM          reduce using rule 22 (expression -> expression DOTSUB expression .)
    FLOATNUM        reduce using rule 22 (expression -> expression DOTSUB expression .)
    STRING          reduce using rule 22 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 22 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 22 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 22 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 22 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 22 (expression -> expression DOTSUB expression .)
    {               reduce using rule 22 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 22 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 22 (expression -> expression DOTSUB expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    :               shift and go to state 51
    '               shift and go to state 52

  ! +               [ reduce using rule 22 (expression -> expression DOTSUB expression .) ]
  ! *               [ reduce using rule 22 (expression -> expression DOTSUB expression .) ]
  ! -               [ reduce using rule 22 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 22 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 22 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 22 (expression -> expression DOTSUB expression .) ]
  ! :               [ reduce using rule 22 (expression -> expression DOTSUB expression .) ]
  ! '               [ reduce using rule 22 (expression -> expression DOTSUB expression .) ]
  ! DOTADD          [ shift and go to state 41 ]
  ! DOTSUB          [ shift and go to state 42 ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 85

    (23) expression -> expression DOTMUL expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 23 (expression -> expression DOTMUL expression .)
    +               reduce using rule 23 (expression -> expression DOTMUL expression .)
    -               reduce using rule 23 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 23 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 23 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 23 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 23 (expression -> expression DOTMUL expression .)
    LE              reduce using rule 23 (expression -> expression DOTMUL expression .)
    GE              reduce using rule 23 (expression -> expression DOTMUL expression .)
    NE              reduce using rule 23 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 23 (expression -> expression DOTMUL expression .)
    <               reduce using rule 23 (expression -> expression DOTMUL expression .)
    >               reduce using rule 23 (expression -> expression DOTMUL expression .)
    )               reduce using rule 23 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 23 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 23 (expression -> expression DOTMUL expression .)
    (               reduce using rule 23 (expression -> expression DOTMUL expression .)
    [               reduce using rule 23 (expression -> expression DOTMUL expression .)
    ZEROS           reduce using rule 23 (expression -> expression DOTMUL expression .)
    ONES            reduce using rule 23 (expression -> expression DOTMUL expression .)
    EYE             reduce using rule 23 (expression -> expression DOTMUL expression .)
    !               reduce using rule 23 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 23 (expression -> expression DOTMUL expression .)
    INTNUM          reduce using rule 23 (expression -> expression DOTMUL expression .)
    FLOATNUM        reduce using rule 23 (expression -> expression DOTMUL expression .)
    STRING          reduce using rule 23 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 23 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 23 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 23 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 23 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 23 (expression -> expression DOTMUL expression .)
    {               reduce using rule 23 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 23 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 23 (expression -> expression DOTMUL expression .)
    *               shift and go to state 38
    /               shift and go to state 40
    :               shift and go to state 51
    '               shift and go to state 52

  ! *               [ reduce using rule 23 (expression -> expression DOTMUL expression .) ]
  ! /               [ reduce using rule 23 (expression -> expression DOTMUL expression .) ]
  ! :               [ reduce using rule 23 (expression -> expression DOTMUL expression .) ]
  ! '               [ reduce using rule 23 (expression -> expression DOTMUL expression .) ]
  ! +               [ shift and go to state 37 ]
  ! -               [ shift and go to state 39 ]
  ! DOTADD          [ shift and go to state 41 ]
  ! DOTSUB          [ shift and go to state 42 ]
  ! DOTMUL          [ shift and go to state 43 ]
  ! DOTDIV          [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 86

    (24) expression -> expression DOTDIV expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 24 (expression -> expression DOTDIV expression .)
    +               reduce using rule 24 (expression -> expression DOTDIV expression .)
    -               reduce using rule 24 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 24 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 24 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 24 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 24 (expression -> expression DOTDIV expression .)
    LE              reduce using rule 24 (expression -> expression DOTDIV expression .)
    GE              reduce using rule 24 (expression -> expression DOTDIV expression .)
    NE              reduce using rule 24 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 24 (expression -> expression DOTDIV expression .)
    <               reduce using rule 24 (expression -> expression DOTDIV expression .)
    >               reduce using rule 24 (expression -> expression DOTDIV expression .)
    )               reduce using rule 24 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 24 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 24 (expression -> expression DOTDIV expression .)
    (               reduce using rule 24 (expression -> expression DOTDIV expression .)
    [               reduce using rule 24 (expression -> expression DOTDIV expression .)
    ZEROS           reduce using rule 24 (expression -> expression DOTDIV expression .)
    ONES            reduce using rule 24 (expression -> expression DOTDIV expression .)
    EYE             reduce using rule 24 (expression -> expression DOTDIV expression .)
    !               reduce using rule 24 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 24 (expression -> expression DOTDIV expression .)
    INTNUM          reduce using rule 24 (expression -> expression DOTDIV expression .)
    FLOATNUM        reduce using rule 24 (expression -> expression DOTDIV expression .)
    STRING          reduce using rule 24 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 24 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 24 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 24 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 24 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 24 (expression -> expression DOTDIV expression .)
    {               reduce using rule 24 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 24 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 24 (expression -> expression DOTDIV expression .)
    *               shift and go to state 38
    /               shift and go to state 40
    :               shift and go to state 51
    '               shift and go to state 52

  ! *               [ reduce using rule 24 (expression -> expression DOTDIV expression .) ]
  ! /               [ reduce using rule 24 (expression -> expression DOTDIV expression .) ]
  ! :               [ reduce using rule 24 (expression -> expression DOTDIV expression .) ]
  ! '               [ reduce using rule 24 (expression -> expression DOTDIV expression .) ]
  ! +               [ shift and go to state 37 ]
  ! -               [ shift and go to state 39 ]
  ! DOTADD          [ shift and go to state 41 ]
  ! DOTSUB          [ shift and go to state 42 ]
  ! DOTMUL          [ shift and go to state 43 ]
  ! DOTDIV          [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 87

    (25) expression -> expression LE expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 25 (expression -> expression LE expression .)
    LE              reduce using rule 25 (expression -> expression LE expression .)
    GE              reduce using rule 25 (expression -> expression LE expression .)
    NE              reduce using rule 25 (expression -> expression LE expression .)
    EQ              reduce using rule 25 (expression -> expression LE expression .)
    <               reduce using rule 25 (expression -> expression LE expression .)
    >               reduce using rule 25 (expression -> expression LE expression .)
    )               reduce using rule 25 (expression -> expression LE expression .)
    ]               reduce using rule 25 (expression -> expression LE expression .)
    ,               reduce using rule 25 (expression -> expression LE expression .)
    (               reduce using rule 25 (expression -> expression LE expression .)
    [               reduce using rule 25 (expression -> expression LE expression .)
    ZEROS           reduce using rule 25 (expression -> expression LE expression .)
    ONES            reduce using rule 25 (expression -> expression LE expression .)
    EYE             reduce using rule 25 (expression -> expression LE expression .)
    !               reduce using rule 25 (expression -> expression LE expression .)
    ID              reduce using rule 25 (expression -> expression LE expression .)
    INTNUM          reduce using rule 25 (expression -> expression LE expression .)
    FLOATNUM        reduce using rule 25 (expression -> expression LE expression .)
    STRING          reduce using rule 25 (expression -> expression LE expression .)
    BREAK           reduce using rule 25 (expression -> expression LE expression .)
    CONTINUE        reduce using rule 25 (expression -> expression LE expression .)
    RETURN          reduce using rule 25 (expression -> expression LE expression .)
    PRINT           reduce using rule 25 (expression -> expression LE expression .)
    FOR             reduce using rule 25 (expression -> expression LE expression .)
    {               reduce using rule 25 (expression -> expression LE expression .)
    IF              reduce using rule 25 (expression -> expression LE expression .)
    WHILE           reduce using rule 25 (expression -> expression LE expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    :               shift and go to state 51
    '               shift and go to state 52

  ! +               [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! *               [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! -               [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! /               [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! DOTADD          [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! DOTSUB          [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! DOTMUL          [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! DOTDIV          [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! :               [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! '               [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 88

    (26) expression -> expression GE expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 26 (expression -> expression GE expression .)
    LE              reduce using rule 26 (expression -> expression GE expression .)
    GE              reduce using rule 26 (expression -> expression GE expression .)
    NE              reduce using rule 26 (expression -> expression GE expression .)
    EQ              reduce using rule 26 (expression -> expression GE expression .)
    <               reduce using rule 26 (expression -> expression GE expression .)
    >               reduce using rule 26 (expression -> expression GE expression .)
    )               reduce using rule 26 (expression -> expression GE expression .)
    ]               reduce using rule 26 (expression -> expression GE expression .)
    ,               reduce using rule 26 (expression -> expression GE expression .)
    (               reduce using rule 26 (expression -> expression GE expression .)
    [               reduce using rule 26 (expression -> expression GE expression .)
    ZEROS           reduce using rule 26 (expression -> expression GE expression .)
    ONES            reduce using rule 26 (expression -> expression GE expression .)
    EYE             reduce using rule 26 (expression -> expression GE expression .)
    !               reduce using rule 26 (expression -> expression GE expression .)
    ID              reduce using rule 26 (expression -> expression GE expression .)
    INTNUM          reduce using rule 26 (expression -> expression GE expression .)
    FLOATNUM        reduce using rule 26 (expression -> expression GE expression .)
    STRING          reduce using rule 26 (expression -> expression GE expression .)
    BREAK           reduce using rule 26 (expression -> expression GE expression .)
    CONTINUE        reduce using rule 26 (expression -> expression GE expression .)
    RETURN          reduce using rule 26 (expression -> expression GE expression .)
    PRINT           reduce using rule 26 (expression -> expression GE expression .)
    FOR             reduce using rule 26 (expression -> expression GE expression .)
    {               reduce using rule 26 (expression -> expression GE expression .)
    IF              reduce using rule 26 (expression -> expression GE expression .)
    WHILE           reduce using rule 26 (expression -> expression GE expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    :               shift and go to state 51
    '               shift and go to state 52

  ! +               [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! *               [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! -               [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! /               [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! DOTADD          [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! DOTSUB          [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! DOTMUL          [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! DOTDIV          [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! :               [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! '               [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 89

    (27) expression -> expression NE expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 27 (expression -> expression NE expression .)
    LE              reduce using rule 27 (expression -> expression NE expression .)
    GE              reduce using rule 27 (expression -> expression NE expression .)
    NE              reduce using rule 27 (expression -> expression NE expression .)
    EQ              reduce using rule 27 (expression -> expression NE expression .)
    <               reduce using rule 27 (expression -> expression NE expression .)
    >               reduce using rule 27 (expression -> expression NE expression .)
    )               reduce using rule 27 (expression -> expression NE expression .)
    ]               reduce using rule 27 (expression -> expression NE expression .)
    ,               reduce using rule 27 (expression -> expression NE expression .)
    (               reduce using rule 27 (expression -> expression NE expression .)
    [               reduce using rule 27 (expression -> expression NE expression .)
    ZEROS           reduce using rule 27 (expression -> expression NE expression .)
    ONES            reduce using rule 27 (expression -> expression NE expression .)
    EYE             reduce using rule 27 (expression -> expression NE expression .)
    !               reduce using rule 27 (expression -> expression NE expression .)
    ID              reduce using rule 27 (expression -> expression NE expression .)
    INTNUM          reduce using rule 27 (expression -> expression NE expression .)
    FLOATNUM        reduce using rule 27 (expression -> expression NE expression .)
    STRING          reduce using rule 27 (expression -> expression NE expression .)
    BREAK           reduce using rule 27 (expression -> expression NE expression .)
    CONTINUE        reduce using rule 27 (expression -> expression NE expression .)
    RETURN          reduce using rule 27 (expression -> expression NE expression .)
    PRINT           reduce using rule 27 (expression -> expression NE expression .)
    FOR             reduce using rule 27 (expression -> expression NE expression .)
    {               reduce using rule 27 (expression -> expression NE expression .)
    IF              reduce using rule 27 (expression -> expression NE expression .)
    WHILE           reduce using rule 27 (expression -> expression NE expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    :               shift and go to state 51
    '               shift and go to state 52

  ! +               [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! *               [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! -               [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! /               [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! DOTADD          [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! DOTSUB          [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! DOTMUL          [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! DOTDIV          [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! :               [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! '               [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 90

    (28) expression -> expression EQ expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 28 (expression -> expression EQ expression .)
    LE              reduce using rule 28 (expression -> expression EQ expression .)
    GE              reduce using rule 28 (expression -> expression EQ expression .)
    NE              reduce using rule 28 (expression -> expression EQ expression .)
    EQ              reduce using rule 28 (expression -> expression EQ expression .)
    <               reduce using rule 28 (expression -> expression EQ expression .)
    >               reduce using rule 28 (expression -> expression EQ expression .)
    )               reduce using rule 28 (expression -> expression EQ expression .)
    ]               reduce using rule 28 (expression -> expression EQ expression .)
    ,               reduce using rule 28 (expression -> expression EQ expression .)
    (               reduce using rule 28 (expression -> expression EQ expression .)
    [               reduce using rule 28 (expression -> expression EQ expression .)
    ZEROS           reduce using rule 28 (expression -> expression EQ expression .)
    ONES            reduce using rule 28 (expression -> expression EQ expression .)
    EYE             reduce using rule 28 (expression -> expression EQ expression .)
    !               reduce using rule 28 (expression -> expression EQ expression .)
    ID              reduce using rule 28 (expression -> expression EQ expression .)
    INTNUM          reduce using rule 28 (expression -> expression EQ expression .)
    FLOATNUM        reduce using rule 28 (expression -> expression EQ expression .)
    STRING          reduce using rule 28 (expression -> expression EQ expression .)
    BREAK           reduce using rule 28 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 28 (expression -> expression EQ expression .)
    RETURN          reduce using rule 28 (expression -> expression EQ expression .)
    PRINT           reduce using rule 28 (expression -> expression EQ expression .)
    FOR             reduce using rule 28 (expression -> expression EQ expression .)
    {               reduce using rule 28 (expression -> expression EQ expression .)
    IF              reduce using rule 28 (expression -> expression EQ expression .)
    WHILE           reduce using rule 28 (expression -> expression EQ expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    :               shift and go to state 51
    '               shift and go to state 52

  ! +               [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! *               [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! -               [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! /               [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! DOTADD          [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! DOTSUB          [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! DOTMUL          [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! DOTDIV          [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! :               [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! '               [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 91

    (29) expression -> expression < expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 29 (expression -> expression < expression .)
    LE              reduce using rule 29 (expression -> expression < expression .)
    GE              reduce using rule 29 (expression -> expression < expression .)
    NE              reduce using rule 29 (expression -> expression < expression .)
    EQ              reduce using rule 29 (expression -> expression < expression .)
    <               reduce using rule 29 (expression -> expression < expression .)
    >               reduce using rule 29 (expression -> expression < expression .)
    )               reduce using rule 29 (expression -> expression < expression .)
    ]               reduce using rule 29 (expression -> expression < expression .)
    ,               reduce using rule 29 (expression -> expression < expression .)
    (               reduce using rule 29 (expression -> expression < expression .)
    [               reduce using rule 29 (expression -> expression < expression .)
    ZEROS           reduce using rule 29 (expression -> expression < expression .)
    ONES            reduce using rule 29 (expression -> expression < expression .)
    EYE             reduce using rule 29 (expression -> expression < expression .)
    !               reduce using rule 29 (expression -> expression < expression .)
    ID              reduce using rule 29 (expression -> expression < expression .)
    INTNUM          reduce using rule 29 (expression -> expression < expression .)
    FLOATNUM        reduce using rule 29 (expression -> expression < expression .)
    STRING          reduce using rule 29 (expression -> expression < expression .)
    BREAK           reduce using rule 29 (expression -> expression < expression .)
    CONTINUE        reduce using rule 29 (expression -> expression < expression .)
    RETURN          reduce using rule 29 (expression -> expression < expression .)
    PRINT           reduce using rule 29 (expression -> expression < expression .)
    FOR             reduce using rule 29 (expression -> expression < expression .)
    {               reduce using rule 29 (expression -> expression < expression .)
    IF              reduce using rule 29 (expression -> expression < expression .)
    WHILE           reduce using rule 29 (expression -> expression < expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    :               shift and go to state 51
    '               shift and go to state 52

  ! +               [ reduce using rule 29 (expression -> expression < expression .) ]
  ! *               [ reduce using rule 29 (expression -> expression < expression .) ]
  ! -               [ reduce using rule 29 (expression -> expression < expression .) ]
  ! /               [ reduce using rule 29 (expression -> expression < expression .) ]
  ! DOTADD          [ reduce using rule 29 (expression -> expression < expression .) ]
  ! DOTSUB          [ reduce using rule 29 (expression -> expression < expression .) ]
  ! DOTMUL          [ reduce using rule 29 (expression -> expression < expression .) ]
  ! DOTDIV          [ reduce using rule 29 (expression -> expression < expression .) ]
  ! :               [ reduce using rule 29 (expression -> expression < expression .) ]
  ! '               [ reduce using rule 29 (expression -> expression < expression .) ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 92

    (30) expression -> expression > expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 30 (expression -> expression > expression .)
    LE              reduce using rule 30 (expression -> expression > expression .)
    GE              reduce using rule 30 (expression -> expression > expression .)
    NE              reduce using rule 30 (expression -> expression > expression .)
    EQ              reduce using rule 30 (expression -> expression > expression .)
    <               reduce using rule 30 (expression -> expression > expression .)
    >               reduce using rule 30 (expression -> expression > expression .)
    )               reduce using rule 30 (expression -> expression > expression .)
    ]               reduce using rule 30 (expression -> expression > expression .)
    ,               reduce using rule 30 (expression -> expression > expression .)
    (               reduce using rule 30 (expression -> expression > expression .)
    [               reduce using rule 30 (expression -> expression > expression .)
    ZEROS           reduce using rule 30 (expression -> expression > expression .)
    ONES            reduce using rule 30 (expression -> expression > expression .)
    EYE             reduce using rule 30 (expression -> expression > expression .)
    !               reduce using rule 30 (expression -> expression > expression .)
    ID              reduce using rule 30 (expression -> expression > expression .)
    INTNUM          reduce using rule 30 (expression -> expression > expression .)
    FLOATNUM        reduce using rule 30 (expression -> expression > expression .)
    STRING          reduce using rule 30 (expression -> expression > expression .)
    BREAK           reduce using rule 30 (expression -> expression > expression .)
    CONTINUE        reduce using rule 30 (expression -> expression > expression .)
    RETURN          reduce using rule 30 (expression -> expression > expression .)
    PRINT           reduce using rule 30 (expression -> expression > expression .)
    FOR             reduce using rule 30 (expression -> expression > expression .)
    {               reduce using rule 30 (expression -> expression > expression .)
    IF              reduce using rule 30 (expression -> expression > expression .)
    WHILE           reduce using rule 30 (expression -> expression > expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    :               shift and go to state 51
    '               shift and go to state 52

  ! +               [ reduce using rule 30 (expression -> expression > expression .) ]
  ! *               [ reduce using rule 30 (expression -> expression > expression .) ]
  ! -               [ reduce using rule 30 (expression -> expression > expression .) ]
  ! /               [ reduce using rule 30 (expression -> expression > expression .) ]
  ! DOTADD          [ reduce using rule 30 (expression -> expression > expression .) ]
  ! DOTSUB          [ reduce using rule 30 (expression -> expression > expression .) ]
  ! DOTMUL          [ reduce using rule 30 (expression -> expression > expression .) ]
  ! DOTDIV          [ reduce using rule 30 (expression -> expression > expression .) ]
  ! :               [ reduce using rule 30 (expression -> expression > expression .) ]
  ! '               [ reduce using rule 30 (expression -> expression > expression .) ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 93

    (40) expression -> expression : expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 40 (expression -> expression : expression .)
    +               reduce using rule 40 (expression -> expression : expression .)
    *               reduce using rule 40 (expression -> expression : expression .)
    -               reduce using rule 40 (expression -> expression : expression .)
    /               reduce using rule 40 (expression -> expression : expression .)
    DOTADD          reduce using rule 40 (expression -> expression : expression .)
    DOTSUB          reduce using rule 40 (expression -> expression : expression .)
    DOTMUL          reduce using rule 40 (expression -> expression : expression .)
    DOTDIV          reduce using rule 40 (expression -> expression : expression .)
    LE              reduce using rule 40 (expression -> expression : expression .)
    GE              reduce using rule 40 (expression -> expression : expression .)
    NE              reduce using rule 40 (expression -> expression : expression .)
    EQ              reduce using rule 40 (expression -> expression : expression .)
    <               reduce using rule 40 (expression -> expression : expression .)
    >               reduce using rule 40 (expression -> expression : expression .)
    )               reduce using rule 40 (expression -> expression : expression .)
    ]               reduce using rule 40 (expression -> expression : expression .)
    ,               reduce using rule 40 (expression -> expression : expression .)
    (               reduce using rule 40 (expression -> expression : expression .)
    [               reduce using rule 40 (expression -> expression : expression .)
    ZEROS           reduce using rule 40 (expression -> expression : expression .)
    ONES            reduce using rule 40 (expression -> expression : expression .)
    EYE             reduce using rule 40 (expression -> expression : expression .)
    !               reduce using rule 40 (expression -> expression : expression .)
    ID              reduce using rule 40 (expression -> expression : expression .)
    INTNUM          reduce using rule 40 (expression -> expression : expression .)
    FLOATNUM        reduce using rule 40 (expression -> expression : expression .)
    STRING          reduce using rule 40 (expression -> expression : expression .)
    BREAK           reduce using rule 40 (expression -> expression : expression .)
    CONTINUE        reduce using rule 40 (expression -> expression : expression .)
    RETURN          reduce using rule 40 (expression -> expression : expression .)
    PRINT           reduce using rule 40 (expression -> expression : expression .)
    FOR             reduce using rule 40 (expression -> expression : expression .)
    {               reduce using rule 40 (expression -> expression : expression .)
    IF              reduce using rule 40 (expression -> expression : expression .)
    WHILE           reduce using rule 40 (expression -> expression : expression .)
    :               shift and go to state 51
    '               shift and go to state 52

  ! :               [ reduce using rule 40 (expression -> expression : expression .) ]
  ! '               [ reduce using rule 40 (expression -> expression : expression .) ]
  ! +               [ shift and go to state 37 ]
  ! *               [ shift and go to state 38 ]
  ! -               [ shift and go to state 39 ]
  ! /               [ shift and go to state 40 ]
  ! DOTADD          [ shift and go to state 41 ]
  ! DOTSUB          [ shift and go to state 42 ]
  ! DOTMUL          [ shift and go to state 43 ]
  ! DOTDIV          [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 94

    (39) expression -> ID [ . expression_list ]
    (52) expression_list -> . expression
    (53) expression_list -> . expression_list , expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression_list                shift and go to state 111
    expression                     shift and go to state 62

state 95

    (31) expression -> ( expression ) .

    ;               reduce using rule 31 (expression -> ( expression ) .)
    +               reduce using rule 31 (expression -> ( expression ) .)
    *               reduce using rule 31 (expression -> ( expression ) .)
    -               reduce using rule 31 (expression -> ( expression ) .)
    /               reduce using rule 31 (expression -> ( expression ) .)
    DOTADD          reduce using rule 31 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 31 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 31 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 31 (expression -> ( expression ) .)
    LE              reduce using rule 31 (expression -> ( expression ) .)
    GE              reduce using rule 31 (expression -> ( expression ) .)
    NE              reduce using rule 31 (expression -> ( expression ) .)
    EQ              reduce using rule 31 (expression -> ( expression ) .)
    <               reduce using rule 31 (expression -> ( expression ) .)
    >               reduce using rule 31 (expression -> ( expression ) .)
    :               reduce using rule 31 (expression -> ( expression ) .)
    '               reduce using rule 31 (expression -> ( expression ) .)
    )               reduce using rule 31 (expression -> ( expression ) .)
    ]               reduce using rule 31 (expression -> ( expression ) .)
    ,               reduce using rule 31 (expression -> ( expression ) .)
    (               reduce using rule 31 (expression -> ( expression ) .)
    [               reduce using rule 31 (expression -> ( expression ) .)
    ZEROS           reduce using rule 31 (expression -> ( expression ) .)
    ONES            reduce using rule 31 (expression -> ( expression ) .)
    EYE             reduce using rule 31 (expression -> ( expression ) .)
    !               reduce using rule 31 (expression -> ( expression ) .)
    ID              reduce using rule 31 (expression -> ( expression ) .)
    INTNUM          reduce using rule 31 (expression -> ( expression ) .)
    FLOATNUM        reduce using rule 31 (expression -> ( expression ) .)
    STRING          reduce using rule 31 (expression -> ( expression ) .)
    BREAK           reduce using rule 31 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 31 (expression -> ( expression ) .)
    RETURN          reduce using rule 31 (expression -> ( expression ) .)
    PRINT           reduce using rule 31 (expression -> ( expression ) .)
    FOR             reduce using rule 31 (expression -> ( expression ) .)
    {               reduce using rule 31 (expression -> ( expression ) .)
    IF              reduce using rule 31 (expression -> ( expression ) .)
    WHILE           reduce using rule 31 (expression -> ( expression ) .)


state 96

    (32) expression -> [ expression_list ] .

    ;               reduce using rule 32 (expression -> [ expression_list ] .)
    +               reduce using rule 32 (expression -> [ expression_list ] .)
    *               reduce using rule 32 (expression -> [ expression_list ] .)
    -               reduce using rule 32 (expression -> [ expression_list ] .)
    /               reduce using rule 32 (expression -> [ expression_list ] .)
    DOTADD          reduce using rule 32 (expression -> [ expression_list ] .)
    DOTSUB          reduce using rule 32 (expression -> [ expression_list ] .)
    DOTMUL          reduce using rule 32 (expression -> [ expression_list ] .)
    DOTDIV          reduce using rule 32 (expression -> [ expression_list ] .)
    LE              reduce using rule 32 (expression -> [ expression_list ] .)
    GE              reduce using rule 32 (expression -> [ expression_list ] .)
    NE              reduce using rule 32 (expression -> [ expression_list ] .)
    EQ              reduce using rule 32 (expression -> [ expression_list ] .)
    <               reduce using rule 32 (expression -> [ expression_list ] .)
    >               reduce using rule 32 (expression -> [ expression_list ] .)
    :               reduce using rule 32 (expression -> [ expression_list ] .)
    '               reduce using rule 32 (expression -> [ expression_list ] .)
    )               reduce using rule 32 (expression -> [ expression_list ] .)
    ]               reduce using rule 32 (expression -> [ expression_list ] .)
    ,               reduce using rule 32 (expression -> [ expression_list ] .)
    (               reduce using rule 32 (expression -> [ expression_list ] .)
    [               reduce using rule 32 (expression -> [ expression_list ] .)
    ZEROS           reduce using rule 32 (expression -> [ expression_list ] .)
    ONES            reduce using rule 32 (expression -> [ expression_list ] .)
    EYE             reduce using rule 32 (expression -> [ expression_list ] .)
    !               reduce using rule 32 (expression -> [ expression_list ] .)
    ID              reduce using rule 32 (expression -> [ expression_list ] .)
    INTNUM          reduce using rule 32 (expression -> [ expression_list ] .)
    FLOATNUM        reduce using rule 32 (expression -> [ expression_list ] .)
    STRING          reduce using rule 32 (expression -> [ expression_list ] .)
    BREAK           reduce using rule 32 (expression -> [ expression_list ] .)
    CONTINUE        reduce using rule 32 (expression -> [ expression_list ] .)
    RETURN          reduce using rule 32 (expression -> [ expression_list ] .)
    PRINT           reduce using rule 32 (expression -> [ expression_list ] .)
    FOR             reduce using rule 32 (expression -> [ expression_list ] .)
    {               reduce using rule 32 (expression -> [ expression_list ] .)
    IF              reduce using rule 32 (expression -> [ expression_list ] .)
    WHILE           reduce using rule 32 (expression -> [ expression_list ] .)


state 97

    (53) expression_list -> expression_list , . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 112

state 98

    (33) expression -> ZEROS ( expression_list . )
    (53) expression_list -> expression_list . , expression

    )               shift and go to state 113
    ,               shift and go to state 97


state 99

    (34) expression -> ONES ( expression_list . )
    (53) expression_list -> expression_list . , expression

    )               shift and go to state 114
    ,               shift and go to state 97


state 100

    (35) expression -> EYE ( expression_list . )
    (53) expression_list -> expression_list . , expression

    )               shift and go to state 115
    ,               shift and go to state 97


state 101

    (39) expression -> ID [ expression_list . ]
    (51) lvalue -> ID [ expression_list . ]
    (53) expression_list -> expression_list . , expression

    ]               shift and go to state 116
    ,               shift and go to state 97


state 102

    (45) assignment -> lvalue = expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 45 (assignment -> lvalue = expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52


state 103

    (46) assignment -> lvalue ADDASSIGN expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 46 (assignment -> lvalue ADDASSIGN expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52


state 104

    (47) assignment -> lvalue SUBASSIGN expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 47 (assignment -> lvalue SUBASSIGN expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52


state 105

    (48) assignment -> lvalue MULASSIGN expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 48 (assignment -> lvalue MULASSIGN expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52


state 106

    (49) assignment -> lvalue DIVASSIGN expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ;               reduce using rule 49 (assignment -> lvalue DIVASSIGN expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52


state 107

    (57) for_statement -> FOR ID = . expression instruction
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 117

state 108

    (16) compound_statement -> { instructions_opt } .

    (               reduce using rule 16 (compound_statement -> { instructions_opt } .)
    [               reduce using rule 16 (compound_statement -> { instructions_opt } .)
    ZEROS           reduce using rule 16 (compound_statement -> { instructions_opt } .)
    ONES            reduce using rule 16 (compound_statement -> { instructions_opt } .)
    EYE             reduce using rule 16 (compound_statement -> { instructions_opt } .)
    !               reduce using rule 16 (compound_statement -> { instructions_opt } .)
    -               reduce using rule 16 (compound_statement -> { instructions_opt } .)
    ID              reduce using rule 16 (compound_statement -> { instructions_opt } .)
    INTNUM          reduce using rule 16 (compound_statement -> { instructions_opt } .)
    FLOATNUM        reduce using rule 16 (compound_statement -> { instructions_opt } .)
    STRING          reduce using rule 16 (compound_statement -> { instructions_opt } .)
    BREAK           reduce using rule 16 (compound_statement -> { instructions_opt } .)
    CONTINUE        reduce using rule 16 (compound_statement -> { instructions_opt } .)
    RETURN          reduce using rule 16 (compound_statement -> { instructions_opt } .)
    PRINT           reduce using rule 16 (compound_statement -> { instructions_opt } .)
    FOR             reduce using rule 16 (compound_statement -> { instructions_opt } .)
    {               reduce using rule 16 (compound_statement -> { instructions_opt } .)
    IF              reduce using rule 16 (compound_statement -> { instructions_opt } .)
    WHILE           reduce using rule 16 (compound_statement -> { instructions_opt } .)
    $end            reduce using rule 16 (compound_statement -> { instructions_opt } .)
    }               reduce using rule 16 (compound_statement -> { instructions_opt } .)
    ELSE            reduce using rule 16 (compound_statement -> { instructions_opt } .)


state 109

    (54) if_statement -> IF ( expression . ) instruction
    (55) if_statement -> IF ( expression . ) instruction ELSE instruction
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    )               shift and go to state 118
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52


state 110

    (56) while_statement -> WHILE ( expression . ) instruction
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    )               shift and go to state 119
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52


state 111

    (39) expression -> ID [ expression_list . ]
    (53) expression_list -> expression_list . , expression

    ]               shift and go to state 120
    ,               shift and go to state 97


state 112

    (53) expression_list -> expression_list , expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

    ]               reduce using rule 53 (expression_list -> expression_list , expression .)
    ,               reduce using rule 53 (expression_list -> expression_list , expression .)
    ;               reduce using rule 53 (expression_list -> expression_list , expression .)
    )               reduce using rule 53 (expression_list -> expression_list , expression .)
    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 39
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52


state 113

    (33) expression -> ZEROS ( expression_list ) .

    ;               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    +               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    *               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    -               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    /               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    DOTADD          reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    DOTSUB          reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    DOTMUL          reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    DOTDIV          reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    LE              reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    GE              reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    NE              reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    EQ              reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    <               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    >               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    :               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    '               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    )               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    ]               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    ,               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    (               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    [               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    ZEROS           reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    ONES            reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    EYE             reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    !               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    ID              reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    INTNUM          reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    FLOATNUM        reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    STRING          reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    BREAK           reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    CONTINUE        reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    RETURN          reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    PRINT           reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    FOR             reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    {               reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    IF              reduce using rule 33 (expression -> ZEROS ( expression_list ) .)
    WHILE           reduce using rule 33 (expression -> ZEROS ( expression_list ) .)


state 114

    (34) expression -> ONES ( expression_list ) .

    ;               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    +               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    *               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    -               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    /               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    DOTADD          reduce using rule 34 (expression -> ONES ( expression_list ) .)
    DOTSUB          reduce using rule 34 (expression -> ONES ( expression_list ) .)
    DOTMUL          reduce using rule 34 (expression -> ONES ( expression_list ) .)
    DOTDIV          reduce using rule 34 (expression -> ONES ( expression_list ) .)
    LE              reduce using rule 34 (expression -> ONES ( expression_list ) .)
    GE              reduce using rule 34 (expression -> ONES ( expression_list ) .)
    NE              reduce using rule 34 (expression -> ONES ( expression_list ) .)
    EQ              reduce using rule 34 (expression -> ONES ( expression_list ) .)
    <               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    >               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    :               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    '               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    )               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    ]               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    ,               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    (               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    [               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    ZEROS           reduce using rule 34 (expression -> ONES ( expression_list ) .)
    ONES            reduce using rule 34 (expression -> ONES ( expression_list ) .)
    EYE             reduce using rule 34 (expression -> ONES ( expression_list ) .)
    !               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    ID              reduce using rule 34 (expression -> ONES ( expression_list ) .)
    INTNUM          reduce using rule 34 (expression -> ONES ( expression_list ) .)
    FLOATNUM        reduce using rule 34 (expression -> ONES ( expression_list ) .)
    STRING          reduce using rule 34 (expression -> ONES ( expression_list ) .)
    BREAK           reduce using rule 34 (expression -> ONES ( expression_list ) .)
    CONTINUE        reduce using rule 34 (expression -> ONES ( expression_list ) .)
    RETURN          reduce using rule 34 (expression -> ONES ( expression_list ) .)
    PRINT           reduce using rule 34 (expression -> ONES ( expression_list ) .)
    FOR             reduce using rule 34 (expression -> ONES ( expression_list ) .)
    {               reduce using rule 34 (expression -> ONES ( expression_list ) .)
    IF              reduce using rule 34 (expression -> ONES ( expression_list ) .)
    WHILE           reduce using rule 34 (expression -> ONES ( expression_list ) .)


state 115

    (35) expression -> EYE ( expression_list ) .

    ;               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    +               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    *               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    -               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    /               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    DOTADD          reduce using rule 35 (expression -> EYE ( expression_list ) .)
    DOTSUB          reduce using rule 35 (expression -> EYE ( expression_list ) .)
    DOTMUL          reduce using rule 35 (expression -> EYE ( expression_list ) .)
    DOTDIV          reduce using rule 35 (expression -> EYE ( expression_list ) .)
    LE              reduce using rule 35 (expression -> EYE ( expression_list ) .)
    GE              reduce using rule 35 (expression -> EYE ( expression_list ) .)
    NE              reduce using rule 35 (expression -> EYE ( expression_list ) .)
    EQ              reduce using rule 35 (expression -> EYE ( expression_list ) .)
    <               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    >               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    :               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    '               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    )               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    ]               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    ,               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    (               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    [               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    ZEROS           reduce using rule 35 (expression -> EYE ( expression_list ) .)
    ONES            reduce using rule 35 (expression -> EYE ( expression_list ) .)
    EYE             reduce using rule 35 (expression -> EYE ( expression_list ) .)
    !               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    ID              reduce using rule 35 (expression -> EYE ( expression_list ) .)
    INTNUM          reduce using rule 35 (expression -> EYE ( expression_list ) .)
    FLOATNUM        reduce using rule 35 (expression -> EYE ( expression_list ) .)
    STRING          reduce using rule 35 (expression -> EYE ( expression_list ) .)
    BREAK           reduce using rule 35 (expression -> EYE ( expression_list ) .)
    CONTINUE        reduce using rule 35 (expression -> EYE ( expression_list ) .)
    RETURN          reduce using rule 35 (expression -> EYE ( expression_list ) .)
    PRINT           reduce using rule 35 (expression -> EYE ( expression_list ) .)
    FOR             reduce using rule 35 (expression -> EYE ( expression_list ) .)
    {               reduce using rule 35 (expression -> EYE ( expression_list ) .)
    IF              reduce using rule 35 (expression -> EYE ( expression_list ) .)
    WHILE           reduce using rule 35 (expression -> EYE ( expression_list ) .)


state 116

    (39) expression -> ID [ expression_list ] .
    (51) lvalue -> ID [ expression_list ] .

    ;               reduce using rule 39 (expression -> ID [ expression_list ] .)
    +               reduce using rule 39 (expression -> ID [ expression_list ] .)
    *               reduce using rule 39 (expression -> ID [ expression_list ] .)
    -               reduce using rule 39 (expression -> ID [ expression_list ] .)
    /               reduce using rule 39 (expression -> ID [ expression_list ] .)
    DOTADD          reduce using rule 39 (expression -> ID [ expression_list ] .)
    DOTSUB          reduce using rule 39 (expression -> ID [ expression_list ] .)
    DOTMUL          reduce using rule 39 (expression -> ID [ expression_list ] .)
    DOTDIV          reduce using rule 39 (expression -> ID [ expression_list ] .)
    LE              reduce using rule 39 (expression -> ID [ expression_list ] .)
    GE              reduce using rule 39 (expression -> ID [ expression_list ] .)
    NE              reduce using rule 39 (expression -> ID [ expression_list ] .)
    EQ              reduce using rule 39 (expression -> ID [ expression_list ] .)
    <               reduce using rule 39 (expression -> ID [ expression_list ] .)
    >               reduce using rule 39 (expression -> ID [ expression_list ] .)
    :               reduce using rule 39 (expression -> ID [ expression_list ] .)
    '               reduce using rule 39 (expression -> ID [ expression_list ] .)
    =               reduce using rule 51 (lvalue -> ID [ expression_list ] .)
    ADDASSIGN       reduce using rule 51 (lvalue -> ID [ expression_list ] .)
    SUBASSIGN       reduce using rule 51 (lvalue -> ID [ expression_list ] .)
    MULASSIGN       reduce using rule 51 (lvalue -> ID [ expression_list ] .)
    DIVASSIGN       reduce using rule 51 (lvalue -> ID [ expression_list ] .)


state 117

    (57) for_statement -> FOR ID = expression . instruction
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '
    (6) instruction -> . expression ;
    (7) instruction -> . assignment ;
    (8) instruction -> . break_statement ;
    (9) instruction -> . continue_statement ;
    (10) instruction -> . return_statement ;
    (11) instruction -> . print_statement ;
    (12) instruction -> . for_statement
    (13) instruction -> . compound_statement
    (14) instruction -> . if_statement
    (15) instruction -> . while_statement
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '
    (45) assignment -> . lvalue = expression
    (46) assignment -> . lvalue ADDASSIGN expression
    (47) assignment -> . lvalue SUBASSIGN expression
    (48) assignment -> . lvalue MULASSIGN expression
    (49) assignment -> . lvalue DIVASSIGN expression
    (58) break_statement -> . BREAK
    (59) continue_statement -> . CONTINUE
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) print_statement -> . PRINT expression_list
    (57) for_statement -> . FOR ID = expression instruction
    (16) compound_statement -> . { instructions_opt }
    (54) if_statement -> . IF ( expression ) instruction
    (55) if_statement -> . IF ( expression ) instruction ELSE instruction
    (56) while_statement -> . WHILE ( expression ) instruction
    (50) lvalue -> . ID
    (51) lvalue -> . ID [ expression_list ]

    +               shift and go to state 37
    *               shift and go to state 38
    -               shift and go to state 122
    /               shift and go to state 40
    DOTADD          shift and go to state 41
    DOTSUB          shift and go to state 42
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    LE              shift and go to state 45
    GE              shift and go to state 46
    NE              shift and go to state 47
    EQ              shift and go to state 48
    <               shift and go to state 49
    >               shift and go to state 50
    :               shift and go to state 51
    '               shift and go to state 52
    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    ID              shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    {               shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    expression                     shift and go to state 5
    instruction                    shift and go to state 121
    assignment                     shift and go to state 6
    break_statement                shift and go to state 7
    continue_statement             shift and go to state 8
    return_statement               shift and go to state 9
    print_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    compound_statement             shift and go to state 12
    if_statement                   shift and go to state 13
    while_statement                shift and go to state 14
    lvalue                         shift and go to state 26

state 118

    (54) if_statement -> IF ( expression ) . instruction
    (55) if_statement -> IF ( expression ) . instruction ELSE instruction
    (6) instruction -> . expression ;
    (7) instruction -> . assignment ;
    (8) instruction -> . break_statement ;
    (9) instruction -> . continue_statement ;
    (10) instruction -> . return_statement ;
    (11) instruction -> . print_statement ;
    (12) instruction -> . for_statement
    (13) instruction -> . compound_statement
    (14) instruction -> . if_statement
    (15) instruction -> . while_statement
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '
    (45) assignment -> . lvalue = expression
    (46) assignment -> . lvalue ADDASSIGN expression
    (47) assignment -> . lvalue SUBASSIGN expression
    (48) assignment -> . lvalue MULASSIGN expression
    (49) assignment -> . lvalue DIVASSIGN expression
    (58) break_statement -> . BREAK
    (59) continue_statement -> . CONTINUE
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) print_statement -> . PRINT expression_list
    (57) for_statement -> . FOR ID = expression instruction
    (16) compound_statement -> . { instructions_opt }
    (54) if_statement -> . IF ( expression ) instruction
    (55) if_statement -> . IF ( expression ) instruction ELSE instruction
    (56) while_statement -> . WHILE ( expression ) instruction
    (50) lvalue -> . ID
    (51) lvalue -> . ID [ expression_list ]

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    {               shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    expression                     shift and go to state 5
    instruction                    shift and go to state 123
    assignment                     shift and go to state 6
    break_statement                shift and go to state 7
    continue_statement             shift and go to state 8
    return_statement               shift and go to state 9
    print_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    compound_statement             shift and go to state 12
    if_statement                   shift and go to state 13
    while_statement                shift and go to state 14
    lvalue                         shift and go to state 26

state 119

    (56) while_statement -> WHILE ( expression ) . instruction
    (6) instruction -> . expression ;
    (7) instruction -> . assignment ;
    (8) instruction -> . break_statement ;
    (9) instruction -> . continue_statement ;
    (10) instruction -> . return_statement ;
    (11) instruction -> . print_statement ;
    (12) instruction -> . for_statement
    (13) instruction -> . compound_statement
    (14) instruction -> . if_statement
    (15) instruction -> . while_statement
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '
    (45) assignment -> . lvalue = expression
    (46) assignment -> . lvalue ADDASSIGN expression
    (47) assignment -> . lvalue SUBASSIGN expression
    (48) assignment -> . lvalue MULASSIGN expression
    (49) assignment -> . lvalue DIVASSIGN expression
    (58) break_statement -> . BREAK
    (59) continue_statement -> . CONTINUE
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) print_statement -> . PRINT expression_list
    (57) for_statement -> . FOR ID = expression instruction
    (16) compound_statement -> . { instructions_opt }
    (54) if_statement -> . IF ( expression ) instruction
    (55) if_statement -> . IF ( expression ) instruction ELSE instruction
    (56) while_statement -> . WHILE ( expression ) instruction
    (50) lvalue -> . ID
    (51) lvalue -> . ID [ expression_list ]

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    {               shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    expression                     shift and go to state 5
    instruction                    shift and go to state 124
    assignment                     shift and go to state 6
    break_statement                shift and go to state 7
    continue_statement             shift and go to state 8
    return_statement               shift and go to state 9
    print_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    compound_statement             shift and go to state 12
    if_statement                   shift and go to state 13
    while_statement                shift and go to state 14
    lvalue                         shift and go to state 26

state 120

    (39) expression -> ID [ expression_list ] .

    +               reduce using rule 39 (expression -> ID [ expression_list ] .)
    *               reduce using rule 39 (expression -> ID [ expression_list ] .)
    -               reduce using rule 39 (expression -> ID [ expression_list ] .)
    /               reduce using rule 39 (expression -> ID [ expression_list ] .)
    DOTADD          reduce using rule 39 (expression -> ID [ expression_list ] .)
    DOTSUB          reduce using rule 39 (expression -> ID [ expression_list ] .)
    DOTMUL          reduce using rule 39 (expression -> ID [ expression_list ] .)
    DOTDIV          reduce using rule 39 (expression -> ID [ expression_list ] .)
    LE              reduce using rule 39 (expression -> ID [ expression_list ] .)
    GE              reduce using rule 39 (expression -> ID [ expression_list ] .)
    NE              reduce using rule 39 (expression -> ID [ expression_list ] .)
    EQ              reduce using rule 39 (expression -> ID [ expression_list ] .)
    <               reduce using rule 39 (expression -> ID [ expression_list ] .)
    >               reduce using rule 39 (expression -> ID [ expression_list ] .)
    :               reduce using rule 39 (expression -> ID [ expression_list ] .)
    '               reduce using rule 39 (expression -> ID [ expression_list ] .)
    ;               reduce using rule 39 (expression -> ID [ expression_list ] .)
    )               reduce using rule 39 (expression -> ID [ expression_list ] .)
    ]               reduce using rule 39 (expression -> ID [ expression_list ] .)
    ,               reduce using rule 39 (expression -> ID [ expression_list ] .)
    (               reduce using rule 39 (expression -> ID [ expression_list ] .)
    [               reduce using rule 39 (expression -> ID [ expression_list ] .)
    ZEROS           reduce using rule 39 (expression -> ID [ expression_list ] .)
    ONES            reduce using rule 39 (expression -> ID [ expression_list ] .)
    EYE             reduce using rule 39 (expression -> ID [ expression_list ] .)
    !               reduce using rule 39 (expression -> ID [ expression_list ] .)
    ID              reduce using rule 39 (expression -> ID [ expression_list ] .)
    INTNUM          reduce using rule 39 (expression -> ID [ expression_list ] .)
    FLOATNUM        reduce using rule 39 (expression -> ID [ expression_list ] .)
    STRING          reduce using rule 39 (expression -> ID [ expression_list ] .)
    BREAK           reduce using rule 39 (expression -> ID [ expression_list ] .)
    CONTINUE        reduce using rule 39 (expression -> ID [ expression_list ] .)
    RETURN          reduce using rule 39 (expression -> ID [ expression_list ] .)
    PRINT           reduce using rule 39 (expression -> ID [ expression_list ] .)
    FOR             reduce using rule 39 (expression -> ID [ expression_list ] .)
    {               reduce using rule 39 (expression -> ID [ expression_list ] .)
    IF              reduce using rule 39 (expression -> ID [ expression_list ] .)
    WHILE           reduce using rule 39 (expression -> ID [ expression_list ] .)


state 121

    (57) for_statement -> FOR ID = expression instruction .

    (               reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    [               reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    ZEROS           reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    ONES            reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    EYE             reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    !               reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    -               reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    ID              reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    INTNUM          reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    FLOATNUM        reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    STRING          reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    BREAK           reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    CONTINUE        reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    RETURN          reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    PRINT           reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    FOR             reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    {               reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    IF              reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    WHILE           reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    $end            reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    }               reduce using rule 57 (for_statement -> FOR ID = expression instruction .)
    ELSE            reduce using rule 57 (for_statement -> FOR ID = expression instruction .)


state 122

    (19) expression -> expression - . expression
    (37) expression -> - . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 59
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 125

state 123

    (54) if_statement -> IF ( expression ) instruction .
    (55) if_statement -> IF ( expression ) instruction . ELSE instruction

    (               reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    [               reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    ZEROS           reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    ONES            reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    EYE             reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    !               reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    -               reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    ID              reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    INTNUM          reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    FLOATNUM        reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    STRING          reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    BREAK           reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    CONTINUE        reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    RETURN          reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    PRINT           reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    FOR             reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    {               reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    IF              reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    WHILE           reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    $end            reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    }               reduce using rule 54 (if_statement -> IF ( expression ) instruction .)
    ELSE            shift and go to state 126

  ! ELSE            [ reduce using rule 54 (if_statement -> IF ( expression ) instruction .) ]


state 124

    (56) while_statement -> WHILE ( expression ) instruction .

    (               reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    [               reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    ZEROS           reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    ONES            reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    EYE             reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    !               reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    -               reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    ID              reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    INTNUM          reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    FLOATNUM        reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    STRING          reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    BREAK           reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    RETURN          reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    {               reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    IF              reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    WHILE           reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    $end            reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    }               reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)
    ELSE            reduce using rule 56 (while_statement -> WHILE ( expression ) instruction .)


state 125

    (19) expression -> expression - expression .
    (37) expression -> - expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . * expression
    (19) expression -> expression . - expression
    (20) expression -> expression . / expression
    (21) expression -> expression . DOTADD expression
    (22) expression -> expression . DOTSUB expression
    (23) expression -> expression . DOTMUL expression
    (24) expression -> expression . DOTDIV expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . < expression
    (30) expression -> expression . > expression
    (40) expression -> expression . : expression
    (44) expression -> expression . '

  ! reduce/reduce conflict for + resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for * resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for - resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for / resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for DOTADD resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for DOTSUB resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for DOTMUL resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for DOTDIV resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for LE resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for GE resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for NE resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for EQ resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for < resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for > resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for : resolved using rule 19 (expression -> expression - expression .)
  ! reduce/reduce conflict for ' resolved using rule 19 (expression -> expression - expression .)
    +               reduce using rule 19 (expression -> expression - expression .)
    -               reduce using rule 19 (expression -> expression - expression .)
    DOTADD          reduce using rule 19 (expression -> expression - expression .)
    DOTSUB          reduce using rule 19 (expression -> expression - expression .)
    LE              reduce using rule 19 (expression -> expression - expression .)
    GE              reduce using rule 19 (expression -> expression - expression .)
    NE              reduce using rule 19 (expression -> expression - expression .)
    EQ              reduce using rule 19 (expression -> expression - expression .)
    <               reduce using rule 19 (expression -> expression - expression .)
    >               reduce using rule 19 (expression -> expression - expression .)
    (               reduce using rule 19 (expression -> expression - expression .)
    [               reduce using rule 19 (expression -> expression - expression .)
    ZEROS           reduce using rule 19 (expression -> expression - expression .)
    ONES            reduce using rule 19 (expression -> expression - expression .)
    EYE             reduce using rule 19 (expression -> expression - expression .)
    !               reduce using rule 19 (expression -> expression - expression .)
    ID              reduce using rule 19 (expression -> expression - expression .)
    INTNUM          reduce using rule 19 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 19 (expression -> expression - expression .)
    STRING          reduce using rule 19 (expression -> expression - expression .)
    BREAK           reduce using rule 19 (expression -> expression - expression .)
    CONTINUE        reduce using rule 19 (expression -> expression - expression .)
    RETURN          reduce using rule 19 (expression -> expression - expression .)
    PRINT           reduce using rule 19 (expression -> expression - expression .)
    FOR             reduce using rule 19 (expression -> expression - expression .)
    {               reduce using rule 19 (expression -> expression - expression .)
    IF              reduce using rule 19 (expression -> expression - expression .)
    WHILE           reduce using rule 19 (expression -> expression - expression .)
    ;               reduce using rule 37 (expression -> - expression .)
    *               shift and go to state 38
    /               shift and go to state 40
    DOTMUL          shift and go to state 43
    DOTDIV          shift and go to state 44
    :               shift and go to state 51
    '               shift and go to state 52

  ! *               [ reduce using rule 19 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 19 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 19 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 19 (expression -> expression - expression .) ]
  ! :               [ reduce using rule 19 (expression -> expression - expression .) ]
  ! '               [ reduce using rule 19 (expression -> expression - expression .) ]
  ! +               [ reduce using rule 37 (expression -> - expression .) ]
  ! *               [ reduce using rule 37 (expression -> - expression .) ]
  ! -               [ reduce using rule 37 (expression -> - expression .) ]
  ! /               [ reduce using rule 37 (expression -> - expression .) ]
  ! DOTADD          [ reduce using rule 37 (expression -> - expression .) ]
  ! DOTSUB          [ reduce using rule 37 (expression -> - expression .) ]
  ! DOTMUL          [ reduce using rule 37 (expression -> - expression .) ]
  ! DOTDIV          [ reduce using rule 37 (expression -> - expression .) ]
  ! LE              [ reduce using rule 37 (expression -> - expression .) ]
  ! GE              [ reduce using rule 37 (expression -> - expression .) ]
  ! NE              [ reduce using rule 37 (expression -> - expression .) ]
  ! EQ              [ reduce using rule 37 (expression -> - expression .) ]
  ! <               [ reduce using rule 37 (expression -> - expression .) ]
  ! >               [ reduce using rule 37 (expression -> - expression .) ]
  ! :               [ reduce using rule 37 (expression -> - expression .) ]
  ! '               [ reduce using rule 37 (expression -> - expression .) ]
  ! +               [ shift and go to state 37 ]
  ! -               [ shift and go to state 39 ]
  ! DOTADD          [ shift and go to state 41 ]
  ! DOTSUB          [ shift and go to state 42 ]
  ! LE              [ shift and go to state 45 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 48 ]
  ! <               [ shift and go to state 49 ]
  ! >               [ shift and go to state 50 ]


state 126

    (55) if_statement -> IF ( expression ) instruction ELSE . instruction
    (6) instruction -> . expression ;
    (7) instruction -> . assignment ;
    (8) instruction -> . break_statement ;
    (9) instruction -> . continue_statement ;
    (10) instruction -> . return_statement ;
    (11) instruction -> . print_statement ;
    (12) instruction -> . for_statement
    (13) instruction -> . compound_statement
    (14) instruction -> . if_statement
    (15) instruction -> . while_statement
    (17) expression -> . expression + expression
    (18) expression -> . expression * expression
    (19) expression -> . expression - expression
    (20) expression -> . expression / expression
    (21) expression -> . expression DOTADD expression
    (22) expression -> . expression DOTSUB expression
    (23) expression -> . expression DOTMUL expression
    (24) expression -> . expression DOTDIV expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression < expression
    (30) expression -> . expression > expression
    (31) expression -> . ( expression )
    (32) expression -> . [ expression_list ]
    (33) expression -> . ZEROS ( expression_list )
    (34) expression -> . ONES ( expression_list )
    (35) expression -> . EYE ( expression_list )
    (36) expression -> . ! expression
    (37) expression -> . - expression
    (38) expression -> . ID
    (39) expression -> . ID [ expression_list ]
    (40) expression -> . expression : expression
    (41) expression -> . INTNUM
    (42) expression -> . FLOATNUM
    (43) expression -> . STRING
    (44) expression -> . expression '
    (45) assignment -> . lvalue = expression
    (46) assignment -> . lvalue ADDASSIGN expression
    (47) assignment -> . lvalue SUBASSIGN expression
    (48) assignment -> . lvalue MULASSIGN expression
    (49) assignment -> . lvalue DIVASSIGN expression
    (58) break_statement -> . BREAK
    (59) continue_statement -> . CONTINUE
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) print_statement -> . PRINT expression_list
    (57) for_statement -> . FOR ID = expression instruction
    (16) compound_statement -> . { instructions_opt }
    (54) if_statement -> . IF ( expression ) instruction
    (55) if_statement -> . IF ( expression ) instruction ELSE instruction
    (56) while_statement -> . WHILE ( expression ) instruction
    (50) lvalue -> . ID
    (51) lvalue -> . ID [ expression_list ]

    (               shift and go to state 16
    [               shift and go to state 17
    ZEROS           shift and go to state 18
    ONES            shift and go to state 19
    EYE             shift and go to state 20
    !               shift and go to state 21
    -               shift and go to state 15
    ID              shift and go to state 22
    INTNUM          shift and go to state 23
    FLOATNUM        shift and go to state 24
    STRING          shift and go to state 25
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    FOR             shift and go to state 31
    {               shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    expression                     shift and go to state 5
    instruction                    shift and go to state 127
    assignment                     shift and go to state 6
    break_statement                shift and go to state 7
    continue_statement             shift and go to state 8
    return_statement               shift and go to state 9
    print_statement                shift and go to state 10
    for_statement                  shift and go to state 11
    compound_statement             shift and go to state 12
    if_statement                   shift and go to state 13
    while_statement                shift and go to state 14
    lvalue                         shift and go to state 26

state 127

    (55) if_statement -> IF ( expression ) instruction ELSE instruction .

    (               reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    [               reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    ZEROS           reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    ONES            reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    EYE             reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    !               reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    -               reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    ID              reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    INTNUM          reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    FLOATNUM        reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    STRING          reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    BREAK           reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    RETURN          reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    PRINT           reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    FOR             reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    {               reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    IF              reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    WHILE           reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    $end            reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    }               reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    ELSE            reduce using rule 55 (if_statement -> IF ( expression ) instruction ELSE instruction .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 125 resolved using rule (expression -> expression - expression)
WARNING: rejected rule (expression -> - expression) in state 125
