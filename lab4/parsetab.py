
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEleft<>NEGELEEQleftDOTADDDOTSUBleft+-leftDOTMULDOTDIVleft*/nonassoc!right:rightID[rightUMINUSleft'ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE ID IF INTNUM LE MULASSIGN NE ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction\n                    | instructioninstruction : expression ';'\n                   | assignment ';'\n                   | break_statement ';'\n                   | continue_statement ';'\n                   | return_statement ';'\n                   | print_statement ';'\n                   | for_statement\n                   | compound_statement\n                   | if_statement \n                   | while_statementcompound_statement : '{' instructions_opt '}'expression : expression '+' expression\n                  | expression '*' expression \n                  | expression '-' expression\n                  | expression '/' expression\n                  | expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expression\n                  | expression LE expression\n                  | expression GE expression\n                  | expression NE expression\n                  | expression EQ expression\n                  | expression '<' expression\n                  | expression '>' expression\n                  | '(' expression ')'\n                  | '[' expression_list ']'\n                  | ZEROS '(' expression_list ')'\n                  | ONES '(' expression_list ')'\n                  | EYE '(' expression_list ')'\n                  | '!' expression\n                  | '-' expression %prec UMINUS\n                  | ID\n                  | ID '[' expression_list ']'\n                  | expression ':' expression\n                  | INTNUM\n                  | FLOATNUM\n                  | STRING\n                  | expression '\\'' \n                  assignment : lvalue '=' expression\n                  | lvalue ADDASSIGN expression\n                  | lvalue SUBASSIGN expression\n                  | lvalue MULASSIGN expression\n                  | lvalue DIVASSIGN expressionlvalue : ID\n              | ID '[' expression_list ']' \n              expression_list : expression\n                       | expression_list ',' expression\n                        if_statement : IF '(' expression ')' instruction %prec IFX\n                   | IF '(' expression ')' instruction ELSE instructionwhile_statement : WHILE '(' expression ')' instructionfor_statement : FOR ID '=' expression instructionbreak_statement : BREAKcontinue_statement : CONTINUEreturn_statement : RETURN expression\n                       | RETURNprint_statement : PRINT expression_list\n                      "
    
_lr_action_items = {'$end':([0,1,2,3,4,11,12,13,14,35,36,53,54,55,56,57,108,121,123,124,127,],[-3,0,-1,-2,-5,-12,-13,-14,-15,-4,-6,-7,-8,-9,-10,-11,-16,-57,-54,-56,-55,]),'(':([0,3,4,11,12,13,14,15,16,17,18,19,20,21,23,24,25,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,107,108,113,114,115,117,118,119,120,121,122,123,124,125,126,127,],[16,16,-5,-12,-13,-14,-15,16,16,16,63,64,65,16,-41,-42,-43,16,16,16,77,78,-4,-6,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-44,-7,-8,-9,-10,-11,-37,-38,16,16,16,-36,16,16,16,16,16,16,16,16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,16,-31,-32,16,16,-16,-33,-34,-35,16,16,16,-39,-57,16,-54,-56,-19,16,-55,]),'[':([0,3,4,11,12,13,14,15,16,17,21,22,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,107,108,113,114,115,117,118,119,120,121,122,123,124,125,126,127,],[17,17,-5,-12,-13,-14,-15,17,17,17,17,67,-41,-42,-43,17,17,17,-4,-6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-44,-7,-8,-9,-10,-11,-37,94,17,17,17,-36,17,17,17,17,17,17,17,17,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,17,-31,-32,17,17,-16,-33,-34,-35,17,17,17,-39,-57,17,-54,-56,-19,17,-55,]),'ZEROS':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,107,108,113,114,115,117,118,119,120,121,122,123,124,125,126,127,],[18,18,-5,-12,-13,-14,-15,18,18,18,18,-41,-42,-43,18,18,18,-4,-6,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-44,-7,-8,-9,-10,-11,-37,-38,18,18,18,-36,18,18,18,18,18,18,18,18,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,18,-31,-32,18,18,-16,-33,-34,-35,18,18,18,-39,-57,18,-54,-56,-19,18,-55,]),'ONES':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,107,108,113,114,115,117,118,119,120,121,122,123,124,125,126,127,],[19,19,-5,-12,-13,-14,-15,19,19,19,19,-41,-42,-43,19,19,19,-4,-6,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-44,-7,-8,-9,-10,-11,-37,-38,19,19,19,-36,19,19,19,19,19,19,19,19,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,19,-31,-32,19,19,-16,-33,-34,-35,19,19,19,-39,-57,19,-54,-56,-19,19,-55,]),'EYE':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,107,108,113,114,115,117,118,119,120,121,122,123,124,125,126,127,],[20,20,-5,-12,-13,-14,-15,20,20,20,20,-41,-42,-43,20,20,20,-4,-6,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-44,-7,-8,-9,-10,-11,-37,-38,20,20,20,-36,20,20,20,20,20,20,20,20,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,20,-31,-32,20,20,-16,-33,-34,-35,20,20,20,-39,-57,20,-54,-56,-19,20,-55,]),'!':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,107,108,113,114,115,117,118,119,120,121,122,123,124,125,126,127,],[21,21,-5,-12,-13,-14,-15,21,21,21,21,-41,-42,-43,21,21,21,-4,-6,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-44,-7,-8,-9,-10,-11,-37,-38,21,21,21,-36,21,21,21,21,21,21,21,21,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,21,-31,-32,21,21,-16,-33,-34,-35,21,21,21,-39,-57,21,-54,-56,-19,21,-55,]),'-':([0,3,4,5,11,12,13,14,15,16,17,21,22,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,],[15,15,-5,39,-12,-13,-14,-15,15,15,15,15,-38,-41,-42,-43,15,15,15,-4,-6,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-44,-7,-8,-9,-10,-11,-37,-38,39,39,15,15,15,-36,15,15,15,15,15,15,39,15,15,-17,-18,-19,-20,39,39,-23,-24,39,39,39,39,39,39,-40,15,-31,-32,15,39,39,39,39,39,15,-16,39,39,39,-33,-34,-35,-39,122,15,15,-39,-57,15,-54,-56,-19,15,-55,]),'ID':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,107,108,113,114,115,117,118,119,120,121,122,123,124,125,126,127,],[22,22,-5,-12,-13,-14,-15,59,59,59,59,-41,-42,-43,59,59,75,22,-4,-6,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-44,-7,-8,-9,-10,-11,-37,-38,59,59,59,-36,59,59,59,59,59,59,59,59,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,59,-31,-32,59,59,-16,-33,-34,-35,22,22,22,-39,-57,59,-54,-56,-19,22,-55,]),'INTNUM':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,107,108,113,114,115,117,118,119,120,121,122,123,124,125,126,127,],[23,23,-5,-12,-13,-14,-15,23,23,23,23,-41,-42,-43,23,23,23,-4,-6,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-44,-7,-8,-9,-10,-11,-37,-38,23,23,23,-36,23,23,23,23,23,23,23,23,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,23,-31,-32,23,23,-16,-33,-34,-35,23,23,23,-39,-57,23,-54,-56,-19,23,-55,]),'FLOATNUM':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,107,108,113,114,115,117,118,119,120,121,122,123,124,125,126,127,],[24,24,-5,-12,-13,-14,-15,24,24,24,24,-41,-42,-43,24,24,24,-4,-6,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-44,-7,-8,-9,-10,-11,-37,-38,24,24,24,-36,24,24,24,24,24,24,24,24,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,24,-31,-32,24,24,-16,-33,-34,-35,24,24,24,-39,-57,24,-54,-56,-19,24,-55,]),'STRING':([0,3,4,11,12,13,14,15,16,17,21,23,24,25,29,30,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,107,108,113,114,115,117,118,119,120,121,122,123,124,125,126,127,],[25,25,-5,-12,-13,-14,-15,25,25,25,25,-41,-42,-43,25,25,25,-4,-6,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-44,-7,-8,-9,-10,-11,-37,-38,25,25,25,-36,25,25,25,25,25,25,25,25,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,25,-31,-32,25,25,-16,-33,-34,-35,25,25,25,-39,-57,25,-54,-56,-19,25,-55,]),'BREAK':([0,3,4,11,12,13,14,23,24,25,32,35,36,52,53,54,55,56,57,58,59,66,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,108,113,114,115,117,118,119,120,121,123,124,125,126,127,],[27,27,-5,-12,-13,-14,-15,-41,-42,-43,27,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,27,27,27,-39,-57,-54,-56,-19,27,-55,]),'CONTINUE':([0,3,4,11,12,13,14,23,24,25,32,35,36,52,53,54,55,56,57,58,59,66,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,108,113,114,115,117,118,119,120,121,123,124,125,126,127,],[28,28,-5,-12,-13,-14,-15,-41,-42,-43,28,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,28,28,28,-39,-57,-54,-56,-19,28,-55,]),'RETURN':([0,3,4,11,12,13,14,23,24,25,32,35,36,52,53,54,55,56,57,58,59,66,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,108,113,114,115,117,118,119,120,121,123,124,125,126,127,],[29,29,-5,-12,-13,-14,-15,-41,-42,-43,29,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,29,29,29,-39,-57,-54,-56,-19,29,-55,]),'PRINT':([0,3,4,11,12,13,14,23,24,25,32,35,36,52,53,54,55,56,57,58,59,66,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,108,113,114,115,117,118,119,120,121,123,124,125,126,127,],[30,30,-5,-12,-13,-14,-15,-41,-42,-43,30,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,30,30,30,-39,-57,-54,-56,-19,30,-55,]),'FOR':([0,3,4,11,12,13,14,23,24,25,32,35,36,52,53,54,55,56,57,58,59,66,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,108,113,114,115,117,118,119,120,121,123,124,125,126,127,],[31,31,-5,-12,-13,-14,-15,-41,-42,-43,31,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,31,31,31,-39,-57,-54,-56,-19,31,-55,]),'{':([0,3,4,11,12,13,14,23,24,25,32,35,36,52,53,54,55,56,57,58,59,66,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,108,113,114,115,117,118,119,120,121,123,124,125,126,127,],[32,32,-5,-12,-13,-14,-15,-41,-42,-43,32,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,32,32,32,-39,-57,-54,-56,-19,32,-55,]),'IF':([0,3,4,11,12,13,14,23,24,25,32,35,36,52,53,54,55,56,57,58,59,66,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,108,113,114,115,117,118,119,120,121,123,124,125,126,127,],[33,33,-5,-12,-13,-14,-15,-41,-42,-43,33,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,33,33,33,-39,-57,-54,-56,-19,33,-55,]),'WHILE':([0,3,4,11,12,13,14,23,24,25,32,35,36,52,53,54,55,56,57,58,59,66,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,108,113,114,115,117,118,119,120,121,123,124,125,126,127,],[34,34,-5,-12,-13,-14,-15,-41,-42,-43,34,-4,-6,-44,-7,-8,-9,-10,-11,-37,-38,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-16,-33,-34,-35,34,34,34,-39,-57,-54,-56,-19,34,-55,]),'}':([3,4,11,12,13,14,32,35,36,53,54,55,56,57,76,108,121,123,124,127,],[-2,-5,-12,-13,-14,-15,-3,-4,-6,-7,-8,-9,-10,-11,108,-16,-57,-54,-56,-55,]),';':([5,6,7,8,9,10,22,23,24,25,27,28,29,52,58,59,62,66,73,74,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,112,113,114,115,116,120,125,],[36,53,54,55,56,57,-38,-41,-42,-43,-58,-59,-61,-44,-37,-38,-52,-36,-60,-62,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,-45,-46,-47,-48,-49,-53,-33,-34,-35,-39,-39,-37,]),'+':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[37,-38,-41,-42,-43,-44,-37,-38,37,37,-36,37,-17,-18,-19,-20,37,37,-23,-24,37,37,37,37,37,37,-40,-31,-32,37,37,37,37,37,37,37,37,-33,-34,-35,-39,37,-39,-19,]),'*':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[38,-38,-41,-42,-43,-44,-37,-38,38,38,-36,38,38,-18,38,-20,38,38,38,38,38,38,38,38,38,38,-40,-31,-32,38,38,38,38,38,38,38,38,-33,-34,-35,-39,38,-39,38,]),'/':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[40,-38,-41,-42,-43,-44,-37,-38,40,40,-36,40,40,-18,40,-20,40,40,40,40,40,40,40,40,40,40,-40,-31,-32,40,40,40,40,40,40,40,40,-33,-34,-35,-39,40,-39,40,]),'DOTADD':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[41,-38,-41,-42,-43,-44,-37,-38,41,41,-36,41,-17,-18,-19,-20,-21,-22,-23,-24,41,41,41,41,41,41,-40,-31,-32,41,41,41,41,41,41,41,41,-33,-34,-35,-39,41,-39,-19,]),'DOTSUB':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[42,-38,-41,-42,-43,-44,-37,-38,42,42,-36,42,-17,-18,-19,-20,-21,-22,-23,-24,42,42,42,42,42,42,-40,-31,-32,42,42,42,42,42,42,42,42,-33,-34,-35,-39,42,-39,-19,]),'DOTMUL':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[43,-38,-41,-42,-43,-44,-37,-38,43,43,-36,43,43,-18,43,-20,43,43,-23,-24,43,43,43,43,43,43,-40,-31,-32,43,43,43,43,43,43,43,43,-33,-34,-35,-39,43,-39,43,]),'DOTDIV':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[44,-38,-41,-42,-43,-44,-37,-38,44,44,-36,44,44,-18,44,-20,44,44,-23,-24,44,44,44,44,44,44,-40,-31,-32,44,44,44,44,44,44,44,44,-33,-34,-35,-39,44,-39,44,]),'LE':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[45,-38,-41,-42,-43,-44,-37,-38,45,45,-36,45,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,45,45,45,45,45,45,45,45,-33,-34,-35,-39,45,-39,-19,]),'GE':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[46,-38,-41,-42,-43,-44,-37,-38,46,46,-36,46,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,46,46,46,46,46,46,46,46,-33,-34,-35,-39,46,-39,-19,]),'NE':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[47,-38,-41,-42,-43,-44,-37,-38,47,47,-36,47,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,47,47,47,47,47,47,47,47,-33,-34,-35,-39,47,-39,-19,]),'EQ':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[48,-38,-41,-42,-43,-44,-37,-38,48,48,-36,48,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,48,48,48,48,48,48,48,48,-33,-34,-35,-39,48,-39,-19,]),'<':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[49,-38,-41,-42,-43,-44,-37,-38,49,49,-36,49,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,49,49,49,49,49,49,49,49,-33,-34,-35,-39,49,-39,-19,]),'>':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[50,-38,-41,-42,-43,-44,-37,-38,50,50,-36,50,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,50,50,50,50,50,50,50,50,-33,-34,-35,-39,50,-39,-19,]),':':([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[51,-38,-41,-42,-43,-44,-37,-38,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-31,-32,51,51,51,51,51,51,51,51,-33,-34,-35,-39,51,-39,51,]),"'":([5,22,23,24,25,52,58,59,60,62,66,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,103,104,105,106,109,110,112,113,114,115,116,117,120,125,],[52,-38,-41,-42,-43,-44,52,-38,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-31,-32,52,52,52,52,52,52,52,52,-33,-34,-35,-39,52,-39,52,]),'ELSE':([11,12,13,14,36,53,54,55,56,57,108,121,123,124,127,],[-12,-13,-14,-15,-6,-7,-8,-9,-10,-11,-16,-57,126,-56,-55,]),'=':([22,26,75,116,],[-50,68,107,-51,]),'ADDASSIGN':([22,26,116,],[-50,69,-51,]),'SUBASSIGN':([22,26,116,],[-50,70,-51,]),'MULASSIGN':([22,26,116,],[-50,71,-51,]),'DIVASSIGN':([22,26,116,],[-50,72,-51,]),')':([23,24,25,52,58,59,60,62,66,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,99,100,109,110,112,113,114,115,120,],[-41,-42,-43,-44,-37,-38,95,-52,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,113,114,115,118,119,-53,-33,-34,-35,-39,]),']':([23,24,25,52,58,59,61,62,66,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,101,111,112,113,114,115,120,],[-41,-42,-43,-44,-37,-38,96,-52,-36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,116,120,-53,-33,-34,-35,-39,]),',':([23,24,25,52,58,59,61,62,66,74,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,99,100,101,111,112,113,114,115,120,],[-41,-42,-43,-44,-37,-38,97,-52,-36,97,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-40,-31,-32,97,97,97,97,97,-53,-33,-34,-35,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,32,],[2,76,]),'instructions':([0,32,],[3,3,]),'instruction':([0,3,32,117,118,119,126,],[4,35,4,121,123,124,127,]),'expression':([0,3,15,16,17,21,29,30,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,63,64,65,67,68,69,70,71,72,77,78,94,97,107,117,118,119,122,126,],[5,5,58,60,62,66,73,62,5,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,62,62,62,62,102,103,104,105,106,109,110,62,112,117,5,5,5,125,5,]),'assignment':([0,3,32,117,118,119,126,],[6,6,6,6,6,6,6,]),'break_statement':([0,3,32,117,118,119,126,],[7,7,7,7,7,7,7,]),'continue_statement':([0,3,32,117,118,119,126,],[8,8,8,8,8,8,8,]),'return_statement':([0,3,32,117,118,119,126,],[9,9,9,9,9,9,9,]),'print_statement':([0,3,32,117,118,119,126,],[10,10,10,10,10,10,10,]),'for_statement':([0,3,32,117,118,119,126,],[11,11,11,11,11,11,11,]),'compound_statement':([0,3,32,117,118,119,126,],[12,12,12,12,12,12,12,]),'if_statement':([0,3,32,117,118,119,126,],[13,13,13,13,13,13,13,]),'while_statement':([0,3,32,117,118,119,126,],[14,14,14,14,14,14,14,]),'lvalue':([0,3,32,117,118,119,126,],[26,26,26,26,26,26,26,]),'expression_list':([17,30,63,64,65,67,94,],[61,74,98,99,100,101,111,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',33),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',37),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',41),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',46),
  ('instructions -> instruction','instructions',1,'p_instructions_1','Mparser.py',47),
  ('instruction -> expression ;','instruction',2,'p_instruction','Mparser.py',55),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',56),
  ('instruction -> break_statement ;','instruction',2,'p_instruction','Mparser.py',57),
  ('instruction -> continue_statement ;','instruction',2,'p_instruction','Mparser.py',58),
  ('instruction -> return_statement ;','instruction',2,'p_instruction','Mparser.py',59),
  ('instruction -> print_statement ;','instruction',2,'p_instruction','Mparser.py',60),
  ('instruction -> for_statement','instruction',1,'p_instruction','Mparser.py',61),
  ('instruction -> compound_statement','instruction',1,'p_instruction','Mparser.py',62),
  ('instruction -> if_statement','instruction',1,'p_instruction','Mparser.py',63),
  ('instruction -> while_statement','instruction',1,'p_instruction','Mparser.py',64),
  ('compound_statement -> { instructions_opt }','compound_statement',3,'p_compound_statement','Mparser.py',68),
  ('expression -> expression + expression','expression',3,'p_expression','Mparser.py',72),
  ('expression -> expression * expression','expression',3,'p_expression','Mparser.py',73),
  ('expression -> expression - expression','expression',3,'p_expression','Mparser.py',74),
  ('expression -> expression / expression','expression',3,'p_expression','Mparser.py',75),
  ('expression -> expression DOTADD expression','expression',3,'p_expression','Mparser.py',76),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression','Mparser.py',77),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression','Mparser.py',78),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression','Mparser.py',79),
  ('expression -> expression LE expression','expression',3,'p_expression','Mparser.py',80),
  ('expression -> expression GE expression','expression',3,'p_expression','Mparser.py',81),
  ('expression -> expression NE expression','expression',3,'p_expression','Mparser.py',82),
  ('expression -> expression EQ expression','expression',3,'p_expression','Mparser.py',83),
  ('expression -> expression < expression','expression',3,'p_expression','Mparser.py',84),
  ('expression -> expression > expression','expression',3,'p_expression','Mparser.py',85),
  ('expression -> ( expression )','expression',3,'p_expression','Mparser.py',86),
  ('expression -> [ expression_list ]','expression',3,'p_expression','Mparser.py',87),
  ('expression -> ZEROS ( expression_list )','expression',4,'p_expression','Mparser.py',88),
  ('expression -> ONES ( expression_list )','expression',4,'p_expression','Mparser.py',89),
  ('expression -> EYE ( expression_list )','expression',4,'p_expression','Mparser.py',90),
  ('expression -> ! expression','expression',2,'p_expression','Mparser.py',91),
  ('expression -> - expression','expression',2,'p_expression','Mparser.py',92),
  ('expression -> ID','expression',1,'p_expression','Mparser.py',93),
  ('expression -> ID [ expression_list ]','expression',4,'p_expression','Mparser.py',94),
  ('expression -> expression : expression','expression',3,'p_expression','Mparser.py',95),
  ('expression -> INTNUM','expression',1,'p_expression','Mparser.py',96),
  ('expression -> FLOATNUM','expression',1,'p_expression','Mparser.py',97),
  ('expression -> STRING','expression',1,'p_expression','Mparser.py',98),
  ("expression -> expression '",'expression',2,'p_expression','Mparser.py',99),
  ('assignment -> lvalue = expression','assignment',3,'p_assigment','Mparser.py',133),
  ('assignment -> lvalue ADDASSIGN expression','assignment',3,'p_assigment','Mparser.py',134),
  ('assignment -> lvalue SUBASSIGN expression','assignment',3,'p_assigment','Mparser.py',135),
  ('assignment -> lvalue MULASSIGN expression','assignment',3,'p_assigment','Mparser.py',136),
  ('assignment -> lvalue DIVASSIGN expression','assignment',3,'p_assigment','Mparser.py',137),
  ('lvalue -> ID','lvalue',1,'p_lvalue','Mparser.py',141),
  ('lvalue -> ID [ expression_list ]','lvalue',4,'p_lvalue','Mparser.py',142),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Mparser.py',147),
  ('expression_list -> expression_list , expression','expression_list',3,'p_expression_list','Mparser.py',148),
  ('if_statement -> IF ( expression ) instruction','if_statement',5,'p_if_statement','Mparser.py',157),
  ('if_statement -> IF ( expression ) instruction ELSE instruction','if_statement',7,'p_if_statement','Mparser.py',158),
  ('while_statement -> WHILE ( expression ) instruction','while_statement',5,'p_while_statement','Mparser.py',166),
  ('for_statement -> FOR ID = expression instruction','for_statement',5,'p_for_statement','Mparser.py',171),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement','Mparser.py',175),
  ('continue_statement -> CONTINUE','continue_statement',1,'p_continue_statement','Mparser.py',179),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','Mparser.py',183),
  ('return_statement -> RETURN','return_statement',1,'p_return_statement','Mparser.py',184),
  ('print_statement -> PRINT expression_list','print_statement',2,'p_print_statement','Mparser.py',188),
]
